{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Accessor_1 = require(\"./Accessor\");\n\nvar get = require('lodash/get');\n\nvar SuggestionsAccessor =\n/** @class */\nfunction (_super) {\n  __extends(SuggestionsAccessor, _super);\n\n  function SuggestionsAccessor(field) {\n    var _this = _super.call(this) || this;\n\n    _this.field = field;\n    return _this;\n  }\n\n  SuggestionsAccessor.prototype.getSuggestion = function () {\n    return get(this.searchkit.getSuggestions(), [0, 'options', 0, 'text'], false);\n  };\n\n  SuggestionsAccessor.prototype.buildOwnQuery = function (query) {\n    var queryText = query.getQueryString();\n\n    if (queryText.length > 3) {\n      return query.setSuggestions({\n        text: queryText,\n        suggestions: {\n          phrase: {\n            field: this.field,\n            real_word_error_likelihood: 0.95,\n            max_errors: 1,\n            gram_size: 4,\n            direct_generator: [{\n              field: this.field,\n              suggest_mode: 'always',\n              min_word_length: 1\n            }]\n          }\n        }\n      });\n    }\n\n    return query;\n  };\n\n  return SuggestionsAccessor;\n}(Accessor_1.Accessor);\n\nexports.SuggestionsAccessor = SuggestionsAccessor;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEA;AAAA;AAAA;EAAyCC;;EACvC,6BAAmBC,KAAnB,EAAgC;IAAhC,YACEC,qBAAO,IADT;;IAAmBC;;EAElB;;EAEDC;IACE,OAAON,GAAG,CAAC,KAAKO,SAAL,CAAeC,cAAf,EAAD,EAAkC,CAAC,CAAD,EAAI,SAAJ,EAAe,CAAf,EAAkB,MAAlB,CAAlC,EAA6D,KAA7D,CAAV;EACD,CAFD;;EAIAF,wDAAcG,KAAd,EAAmB;IACjB,IAAMC,SAAS,GAAGD,KAAK,CAACE,cAAN,EAAlB;;IACA,IAAID,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;MACxB,OAAOH,KAAK,CAACI,cAAN,CAAqB;QAC1BC,IAAI,EAAEJ,SADoB;QAE1BK,WAAW,EAAE;UACXC,MAAM,EAAE;YACNb,KAAK,EAAE,KAAKA,KADN;YAENc,0BAA0B,EAAE,IAFtB;YAGNC,UAAU,EAAE,CAHN;YAINC,SAAS,EAAE,CAJL;YAKNC,gBAAgB,EAAE,CAChB;cACEjB,KAAK,EAAE,KAAKA,KADd;cAEEkB,YAAY,EAAE,QAFhB;cAGEC,eAAe,EAAE;YAHnB,CADgB;UALZ;QADG;MAFa,CAArB,CAAP;IAkBD;;IACD,OAAOb,KAAP;EACD,CAvBD;;EAwBF;AAAC,CAjCD,CAAyCc,mBAAzC;;AAAaC","names":["get","require","__extends","field","_super","_this","SuggestionsAccessor","searchkit","getSuggestions","query","queryText","getQueryString","length","setSuggestions","text","suggestions","phrase","real_word_error_likelihood","max_errors","gram_size","direct_generator","suggest_mode","min_word_length","Accessor_1","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\core\\accessors\\SuggestionsAccessor.ts"],"sourcesContent":["import { Accessor } from './Accessor'\nconst get = require('lodash/get')\n\nexport class SuggestionsAccessor extends Accessor {\n  constructor(public field: string) {\n    super()\n  }\n\n  getSuggestion() {\n    return get(this.searchkit.getSuggestions(), [0, 'options', 0, 'text'], false)\n  }\n\n  buildOwnQuery(query) {\n    const queryText = query.getQueryString()\n    if (queryText.length > 3) {\n      return query.setSuggestions({\n        text: queryText,\n        suggestions: {\n          phrase: {\n            field: this.field,\n            real_word_error_likelihood: 0.95,\n            max_errors: 1,\n            gram_size: 4,\n            direct_generator: [\n              {\n                field: this.field,\n                suggest_mode: 'always',\n                min_word_length: 1\n              }\n            ]\n          }\n        }\n      })\n    }\n    return query\n  }\n}\n"]},"metadata":{},"sourceType":"script"}