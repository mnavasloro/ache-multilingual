{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar state_1 = require(\"../state\");\n\nvar query_1 = require(\"../query\");\n\nvar FilterBasedAccessor_1 = require(\"./FilterBasedAccessor\");\n\nvar identity = require('lodash/identity');\n\nvar maxBy = require('lodash/maxBy');\n\nvar get = require('lodash/get');\n\nvar assign = require('lodash/assign');\n\nvar RangeAccessor =\n/** @class */\nfunction (_super) {\n  __extends(RangeAccessor, _super);\n\n  function RangeAccessor(key, options) {\n    var _this = _super.call(this, key, options.id) || this;\n\n    _this.state = new state_1.ObjectState({});\n    _this.translations = RangeAccessor.translations;\n    _this.options = options;\n    _this.options.fieldOptions = _this.options.fieldOptions || {\n      type: 'embedded'\n    };\n    _this.options.fieldOptions.field = _this.options.field;\n    _this.fieldContext = query_1.FieldContextFactory(_this.options.fieldOptions);\n    _this.options.rangeFormatter = _this.options.rangeFormatter || identity;\n\n    if (options.translations) {\n      _this.translations = assign({}, _this.translations, options.translations);\n    }\n\n    return _this;\n  }\n\n  RangeAccessor.prototype.getSelectedValue = function (value) {\n    var divider = this.translate('range.divider');\n    return [this.options.rangeFormatter(value.min), divider, this.options.rangeFormatter(value.max)].join('');\n  };\n\n  RangeAccessor.prototype.buildSharedQuery = function (query) {\n    var _this = this;\n\n    if (this.state.hasValue()) {\n      var val = this.state.getValue();\n      var rangeFilter = this.fieldContext.wrapFilter(query_1.RangeQuery(this.options.field, {\n        gte: val.min,\n        lte: val.max\n      }));\n      var selectedFilter = {\n        name: this.translate(this.options.title),\n        value: this.getSelectedValue(val),\n        id: this.options.id,\n        remove: function remove() {\n          _this.state = _this.state.clear();\n        }\n      };\n      return query.addFilter(this.uuid, rangeFilter).addSelectedFilter(selectedFilter);\n    }\n\n    return query;\n  };\n\n  RangeAccessor.prototype.getBuckets = function () {\n    return this.getAggregations([this.uuid, this.fieldContext.getAggregationPath(), this.key, 'buckets'], []);\n  };\n\n  RangeAccessor.prototype.isDisabled = function () {\n    if (this.options.loadHistogram) {\n      var maxValue = get(maxBy(this.getBuckets(), 'doc_count'), 'doc_count', 0);\n      return maxValue === 0;\n    }\n\n    return this.getAggregations([this.uuid, this.fieldContext.getAggregationPath(), this.key, 'value'], 0) === 0;\n  };\n\n  RangeAccessor.prototype.getInterval = function () {\n    if (this.options.interval) {\n      return this.options.interval;\n    }\n\n    return Math.ceil((this.options.max - this.options.min) / 20);\n  };\n\n  RangeAccessor.prototype.buildOwnQuery = function (query) {\n    var otherFilters = query.getFiltersWithoutKeys(this.uuid);\n    var filters = query_1.BoolMust([otherFilters, this.fieldContext.wrapFilter(query_1.RangeQuery(this.options.field, {\n      gte: this.options.min,\n      lte: this.options.max\n    }))]);\n    var metric;\n\n    if (this.options.loadHistogram) {\n      metric = query_1.HistogramBucket(this.key, this.options.field, {\n        interval: this.getInterval(),\n        min_doc_count: 0,\n        extended_bounds: {\n          min: this.options.min,\n          max: this.options.max\n        }\n      });\n    } else {\n      metric = query_1.CardinalityMetric(this.key, this.options.field);\n    }\n\n    return query.setAggs(query_1.FilterBucket.apply(void 0, __spreadArrays([this.uuid, filters], this.fieldContext.wrapAggregations(metric))));\n  };\n\n  RangeAccessor.translations = {\n    'range.divider': ' - '\n  };\n  return RangeAccessor;\n}(FilterBasedAccessor_1.FilterBasedAccessor);\n\nexports.RangeAccessor = RangeAccessor;","map":{"version":3,"mappings":"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","names":["identity","require","maxBy","get","assign","__extends","key","options","_super","id","_this","state_1","RangeAccessor","translations","fieldOptions","type","field","fieldContext","query_1","rangeFormatter","value","divider","translate","min","max","join","query","state","hasValue","val","getValue","rangeFilter","wrapFilter","gte","lte","selectedFilter","name","title","getSelectedValue","remove","clear","addFilter","uuid","addSelectedFilter","getAggregations","getAggregationPath","loadHistogram","maxValue","getBuckets","interval","Math","ceil","otherFilters","getFiltersWithoutKeys","filters","metric","getInterval","min_doc_count","extended_bounds","setAggs","apply","__spreadArrays","wrapAggregations","FilterBasedAccessor_1","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\core\\accessors\\RangeAccessor.ts"],"sourcesContent":["import { ObjectState } from '../state'\nimport {\n  FilterBucket,\n  HistogramBucket,\n  RangeQuery,\n  BoolMust,\n  CardinalityMetric,\n  FieldOptions,\n  FieldContext,\n  FieldContextFactory\n} from '../query'\nimport { FilterBasedAccessor } from './FilterBasedAccessor'\n\nconst identity = require('lodash/identity')\nconst maxBy = require('lodash/maxBy')\nconst get = require('lodash/get')\nconst assign = require('lodash/assign')\n\nexport interface RangeAccessorOptions {\n  title: string\n  id: string\n  min: number\n  max: number\n  interval?: number\n  field: string\n  loadHistogram?: boolean\n  fieldOptions?: FieldOptions\n  rangeFormatter?: Function\n  translations?: Record<string, any>\n}\n\nexport class RangeAccessor extends FilterBasedAccessor<ObjectState> {\n  options: any\n  state = new ObjectState({})\n  fieldContext: FieldContext\n\n  static translations: any = {\n    'range.divider': ' - '\n  }\n  translations = RangeAccessor.translations\n\n  constructor(key, options: RangeAccessorOptions) {\n    super(key, options.id)\n    this.options = options\n    this.options.fieldOptions = this.options.fieldOptions || { type: 'embedded' }\n    this.options.fieldOptions.field = this.options.field\n    this.fieldContext = FieldContextFactory(this.options.fieldOptions)\n    this.options.rangeFormatter = this.options.rangeFormatter || identity\n    if (options.translations) {\n      this.translations = assign({}, this.translations, options.translations)\n    }\n  }\n  getSelectedValue(value) {\n    const divider = this.translate('range.divider')\n    return [\n      this.options.rangeFormatter(value.min),\n      divider,\n      this.options.rangeFormatter(value.max)\n    ].join('')\n  }\n\n  buildSharedQuery(query) {\n    if (this.state.hasValue()) {\n      const val: any = this.state.getValue()\n      const rangeFilter = this.fieldContext.wrapFilter(\n        RangeQuery(this.options.field, {\n          gte: val.min,\n          lte: val.max\n        })\n      )\n      const selectedFilter = {\n        name: this.translate(this.options.title),\n        value: this.getSelectedValue(val),\n        id: this.options.id,\n        remove: () => {\n          this.state = this.state.clear()\n        }\n      }\n\n      return query.addFilter(this.uuid, rangeFilter).addSelectedFilter(selectedFilter)\n    }\n\n    return query\n  }\n\n  getBuckets() {\n    return this.getAggregations(\n      [this.uuid, this.fieldContext.getAggregationPath(), this.key, 'buckets'],\n      []\n    )\n  }\n\n  isDisabled() {\n    if (this.options.loadHistogram) {\n      const maxValue = get(maxBy(this.getBuckets(), 'doc_count'), 'doc_count', 0)\n      return maxValue === 0\n    }\n    return (\n      this.getAggregations(\n        [this.uuid, this.fieldContext.getAggregationPath(), this.key, 'value'],\n        0\n      ) === 0\n    )\n  }\n\n  getInterval() {\n    if (this.options.interval) {\n      return this.options.interval\n    }\n    return Math.ceil((this.options.max - this.options.min) / 20)\n  }\n\n  buildOwnQuery(query) {\n    const otherFilters = query.getFiltersWithoutKeys(this.uuid)\n    const filters = BoolMust([\n      otherFilters,\n      this.fieldContext.wrapFilter(\n        RangeQuery(this.options.field, {\n          gte: this.options.min,\n          lte: this.options.max\n        })\n      )\n    ])\n\n    let metric\n\n    if (this.options.loadHistogram) {\n      metric = HistogramBucket(this.key, this.options.field, {\n        interval: this.getInterval(),\n        min_doc_count: 0,\n        extended_bounds: {\n          min: this.options.min,\n          max: this.options.max\n        }\n      })\n    } else {\n      metric = CardinalityMetric(this.key, this.options.field)\n    }\n\n    return query.setAggs(\n      FilterBucket(this.uuid, filters, ...this.fieldContext.wrapAggregations(metric))\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}