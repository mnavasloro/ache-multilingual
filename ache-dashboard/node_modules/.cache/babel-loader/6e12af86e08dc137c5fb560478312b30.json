{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"../../../core/react\");\n\nvar ItemComponents_1 = require(\"./ItemComponents\");\n\nvar map = require('lodash/map');\n\nvar includes = require('lodash/includes');\n\nvar sortBy = require('lodash/sortBy');\n\nvar minBy = require('lodash/minBy');\n\nvar maxBy = require('lodash/maxBy');\n\nvar identity = require('lodash/identity');\n\nfunction computeMinMax(items, field) {\n  if (!items || items.length == 0) return {\n    min: 0,\n    max: 0\n  };\n  return {\n    min: minBy(items, field)[field],\n    max: maxBy(items, field)[field]\n  };\n}\n\nvar TagCloud =\n/** @class */\nfunction (_super) {\n  __extends(TagCloud, _super);\n\n  function TagCloud() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TagCloud.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        mod = _a.mod,\n        className = _a.className,\n        disabled = _a.disabled,\n        items = _a.items,\n        translate = _a.translate;\n    var bemBlocks = {\n      container: react_1.block(mod).el,\n      option: react_1.block(mod + \"-option\").el\n    };\n    var sortedItems = sortBy(items, function (it) {\n      return translate(it.title || it.label || it.key).toLowerCase();\n    });\n\n    var _b = computeMinMax(items, 'doc_count'),\n        min = _b.min,\n        max = _b.max;\n\n    return React.createElement(\"div\", {\n      className: bemBlocks.container().mix(className).state({\n        disabled: disabled\n      })\n    }, map(sortedItems, function (item) {\n      return _this.renderItem(item, bemBlocks, min, max);\n    }));\n  };\n\n  TagCloud.prototype.renderItem = function (item, bemBlocks, min, max) {\n    var _a = this.props,\n        itemComponent = _a.itemComponent,\n        minFontSize = _a.minFontSize,\n        maxFontSize = _a.maxFontSize,\n        showCount = _a.showCount,\n        countFormatter = _a.countFormatter,\n        _b = _a.selectedItems,\n        selectedItems = _b === void 0 ? [] : _b,\n        toggleItem = _a.toggleItem,\n        disabled = _a.disabled,\n        translate = _a.translate;\n    var sizeRatio = min === max ? 0.5 : (item.doc_count - min) / (max - min);\n    var fontSize = minFontSize + sizeRatio * (maxFontSize - minFontSize); // TODO : make ratio function customizable (square, log, etc.)\n\n    return react_1.renderComponent(itemComponent, {\n      label: translate(item.title || item.label || item.key),\n      onClick: function onClick() {\n        return toggleItem(item.key);\n      },\n      bemBlocks: bemBlocks,\n      key: item.key,\n      itemKey: item.key,\n      disabled: disabled || item.disabled,\n      active: includes(selectedItems, item.key),\n      style: {\n        fontSize: fontSize + 'em'\n      },\n      showCount: showCount,\n      count: countFormatter(item.doc_count)\n    });\n  };\n\n  TagCloud.defaultProps = {\n    mod: 'sk-tag-cloud',\n    itemComponent: ItemComponents_1.ItemComponent,\n    showCount: false,\n    minFontSize: 1,\n    maxFontSize: 1.5,\n    translate: identity,\n    countFormatter: identity\n  };\n  return TagCloud;\n}(React.PureComponent);\n\nexports.TagCloud = TagCloud;","map":{"version":3,"mappings":"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","names":["map","require","includes","sortBy","minBy","maxBy","identity","computeMinMax","items","field","length","min","max","__extends","TagCloud","mod","className","disabled","translate","bemBlocks","container","react_1","el","option","sortedItems","it","title","label","key","toLowerCase","React","mix","state","item","renderItem","itemComponent","minFontSize","maxFontSize","showCount","countFormatter","_b","selectedItems","toggleItem","sizeRatio","doc_count","fontSize","onClick","itemKey","active","style","count","ItemComponents_1","PureComponent","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\ui\\list\\TagCloud.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { RenderComponentType, renderComponent, block } from '../../../core/react'\n\nimport { ItemComponent } from './ItemComponents'\nimport { ListProps, ItemProps } from './ListProps'\n\nconst map = require('lodash/map')\nconst includes = require('lodash/includes')\nconst sortBy = require('lodash/sortBy')\nconst minBy = require('lodash/minBy')\nconst maxBy = require('lodash/maxBy')\nconst identity = require('lodash/identity')\n\nfunction computeMinMax(items, field) {\n  if (!items || items.length == 0) return { min: 0, max: 0 }\n  return {\n    min: minBy(items, field)[field],\n    max: maxBy(items, field)[field]\n  }\n}\n\nexport interface TagCloudProps extends ListProps {\n  minFontSize?: number\n  maxFontSize?: number\n  itemComponent?: RenderComponentType<ItemProps>\n}\n\nexport class TagCloud extends React.PureComponent<TagCloudProps, any> {\n  static defaultProps: any = {\n    mod: 'sk-tag-cloud',\n    itemComponent: ItemComponent,\n    showCount: false,\n    minFontSize: 1, // In em\n    maxFontSize: 1.5,\n    translate: identity,\n    countFormatter: identity\n  }\n\n  render() {\n    const { mod, className, disabled, items, translate } = this.props\n\n    const bemBlocks = {\n      container: block(mod).el,\n      option: block(`${mod}-option`).el\n    }\n\n    const sortedItems = sortBy(items, (it) =>\n      translate(it.title || it.label || it.key).toLowerCase()\n    )\n    const { min, max } = computeMinMax(items, 'doc_count')\n\n    return (\n      <div\n        className={bemBlocks\n          .container()\n          .mix(className)\n          .state({ disabled })}\n      >\n        {map(sortedItems, (item) => this.renderItem(item, bemBlocks, min, max))}\n      </div>\n    )\n  }\n\n  renderItem(item, bemBlocks, min, max) {\n    const {\n      itemComponent,\n      minFontSize,\n      maxFontSize,\n      showCount,\n      countFormatter,\n      selectedItems = [],\n      toggleItem,\n      disabled,\n      translate\n    } = this.props\n\n    const sizeRatio = min === max ? 0.5 : (item.doc_count - min) / (max - min)\n    const fontSize = minFontSize + sizeRatio * (maxFontSize - minFontSize) // TODO : make ratio function customizable (square, log, etc.)\n    return renderComponent(itemComponent, {\n      label: translate(item.title || item.label || item.key),\n      onClick: () => toggleItem(item.key),\n      bemBlocks: bemBlocks,\n      key: item.key,\n      itemKey: item.key,\n      disabled: disabled || item.disabled,\n      active: includes(selectedItems, item.key),\n      style: { fontSize: fontSize + 'em' },\n      showCount,\n      count: countFormatter(item.doc_count)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}