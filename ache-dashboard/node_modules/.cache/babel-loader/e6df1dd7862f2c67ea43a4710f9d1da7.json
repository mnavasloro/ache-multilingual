{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SearchRequest =\n/** @class */\nfunction () {\n  function SearchRequest(transport, query, searchkit) {\n    this.transport = transport;\n    this.query = query;\n    this.searchkit = searchkit;\n    this.active = true;\n  }\n\n  SearchRequest.prototype.run = function () {\n    return this.transport.search(this.query).then(this.setResults.bind(this)).catch(this.setError.bind(this));\n  };\n\n  SearchRequest.prototype.deactivate = function () {\n    this.active = false;\n  };\n\n  SearchRequest.prototype.setResults = function (results) {\n    if (this.active) {\n      this.searchkit.setResults(results);\n    }\n  };\n\n  SearchRequest.prototype.setError = function (error) {\n    if (this.active) {\n      this.searchkit.setError(error);\n    }\n  };\n\n  return SearchRequest;\n}();\n\nexports.SearchRequest = SearchRequest;","map":{"version":3,"mappings":";;;;AAGA;AAAA;AAAA;EAEE,uBACSA,SADT,EAESC,KAFT,EAGSC,SAHT,EAGoC;IAF3B;IACA;IACA;IAEP,KAAKC,MAAL,GAAc,IAAd;EACD;;EAEDC;IACE,OAAO,KAAKJ,SAAL,CACJK,MADI,CACG,KAAKJ,KADR,EAEJK,IAFI,CAEC,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAFD,EAGJC,KAHI,CAGE,KAAKC,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAHF,CAAP;EAID,CALD;;EAOAJ;IACE,KAAKD,MAAL,GAAc,KAAd;EACD,CAFD;;EAIAC,+CAAWO,OAAX,EAAkB;IAChB,IAAI,KAAKR,MAAT,EAAiB;MACf,KAAKD,SAAL,CAAeK,UAAf,CAA0BI,OAA1B;IACD;EACF,CAJD;;EAMAP,6CAASQ,KAAT,EAAc;IACZ,IAAI,KAAKT,MAAT,EAAiB;MACf,KAAKD,SAAL,CAAeQ,QAAf,CAAwBE,KAAxB;IACD;EACF,CAJD;;EAKF;AAAC,CAhCD;;AAAaC","names":["transport","query","searchkit","active","SearchRequest","search","then","setResults","bind","catch","setError","results","error","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\core\\SearchRequest.ts"],"sourcesContent":["import { ESTransport } from './transport'\nimport { SearchkitManager } from './SearchkitManager'\n\nexport class SearchRequest {\n  active: boolean\n  constructor(\n    public transport: ESTransport,\n    public query: Record<string, any>,\n    public searchkit: SearchkitManager\n  ) {\n    this.active = true\n  }\n\n  run() {\n    return this.transport\n      .search(this.query)\n      .then(this.setResults.bind(this))\n      .catch(this.setError.bind(this))\n  }\n\n  deactivate() {\n    this.active = false\n  }\n\n  setResults(results) {\n    if (this.active) {\n      this.searchkit.setResults(results)\n    }\n  }\n\n  setError(error) {\n    if (this.active) {\n      this.searchkit.setError(error)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}