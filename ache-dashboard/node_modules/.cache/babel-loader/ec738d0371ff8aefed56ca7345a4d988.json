{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar state_1 = require(\"../state\");\n\nvar StatefulAccessor_1 = require(\"./StatefulAccessor\");\n\nvar BaseQueryAccessor =\n/** @class */\nfunction (_super) {\n  __extends(BaseQueryAccessor, _super);\n\n  function BaseQueryAccessor(key) {\n    var _this = _super.call(this, key) || this;\n\n    _this.state = new state_1.ValueState();\n    return _this;\n  }\n\n  BaseQueryAccessor.prototype.keepOnlyQueryState = function () {\n    this.setQueryString(this.getQueryString(), true);\n  };\n\n  BaseQueryAccessor.prototype.setQueryString = function (queryString, withReset) {\n    if (withReset === void 0) {\n      withReset = false;\n    }\n\n    if (withReset) {\n      this.searchkit.resetState();\n    }\n\n    this.state = this.state.setValue(queryString);\n  };\n\n  BaseQueryAccessor.prototype.getQueryString = function () {\n    return this.state.getValue();\n  };\n\n  return BaseQueryAccessor;\n}(StatefulAccessor_1.StatefulAccessor);\n\nexports.BaseQueryAccessor = BaseQueryAccessor;\n\nvar NoopQueryAccessor =\n/** @class */\nfunction (_super) {\n  __extends(NoopQueryAccessor, _super);\n\n  function NoopQueryAccessor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NoopQueryAccessor.prototype.keepOnlyQueryState = function () {\n    console.warn('keepOnlyQueryState called, No Query Accessor exists');\n  };\n\n  NoopQueryAccessor.prototype.setQueryString = function () {\n    console.warn('setQueryString called, No Query Accessor exists');\n  };\n\n  NoopQueryAccessor.prototype.getQueryString = function () {\n    console.warn('getQueryString called, No Query Accessor exists');\n    return '';\n  };\n\n  return NoopQueryAccessor;\n}(BaseQueryAccessor);\n\nexports.NoopQueryAccessor = NoopQueryAccessor;\nexports.noopQueryAccessor = new NoopQueryAccessor(null);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;AAAA;AAAA;EAAuCA;;EACrC,2BAAYC,GAAZ,EAAe;IAAf,YACEC,kBAAMD,GAAN,KAAU,IADZ;;IAEEE,KAAI,CAACC,KAAL,GAAa,IAAIC,kBAAJ,EAAb;;EACD;;EAEDC;IACE,KAAKC,cAAL,CAAoB,KAAKC,cAAL,EAApB,EAA2C,IAA3C;EACD,CAFD;;EAIAF,uDAAeG,WAAf,EAA4BC,SAA5B,EAA6C;IAAjB;MAAAA;IAAiB;;IAC3C,IAAIA,SAAJ,EAAe;MACb,KAAKC,SAAL,CAAeC,UAAf;IACD;;IACD,KAAKR,KAAL,GAAa,KAAKA,KAAL,CAAWS,QAAX,CAAoBJ,WAApB,CAAb;EACD,CALD;;EAOAH;IACE,OAAO,KAAKF,KAAL,CAAWU,QAAX,EAAP;EACD,CAFD;;EAGF;AAAC,CApBD,CAAuCC,mCAAvC;;AAAaC;;AAsBb;AAAA;AAAA;EAAuChB;;EAAvC;;EAaC;;EAZCiB;IACEC,OAAO,CAACC,IAAR,CAAa,qDAAb;EACD,CAFD;;EAIAF;IACEC,OAAO,CAACC,IAAR,CAAa,iDAAb;EACD,CAFD;;EAIAF;IACEC,OAAO,CAACC,IAAR,CAAa,iDAAb;IACA,OAAO,EAAP;EACD,CAHD;;EAIF;AAAC,CAbD,CAAuCb,iBAAvC;;AAAaU;AAeAA,4BAAoB,IAAIC,iBAAJ,CAAsB,IAAtB,CAApB","names":["__extends","key","_super","_this","state","state_1","BaseQueryAccessor","setQueryString","getQueryString","queryString","withReset","searchkit","resetState","setValue","getValue","StatefulAccessor_1","exports","NoopQueryAccessor","console","warn"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\core\\accessors\\BaseQueryAccessor.ts"],"sourcesContent":["import { ValueState } from '../state'\nimport { StatefulAccessor } from './StatefulAccessor'\n\nexport class BaseQueryAccessor extends StatefulAccessor<ValueState> {\n  constructor(key) {\n    super(key)\n    this.state = new ValueState()\n  }\n\n  keepOnlyQueryState() {\n    this.setQueryString(this.getQueryString(), true)\n  }\n\n  setQueryString(queryString, withReset = false) {\n    if (withReset) {\n      this.searchkit.resetState()\n    }\n    this.state = this.state.setValue(queryString)\n  }\n\n  getQueryString() {\n    return this.state.getValue()\n  }\n}\n\nexport class NoopQueryAccessor extends BaseQueryAccessor {\n  keepOnlyQueryState() {\n    console.warn('keepOnlyQueryState called, No Query Accessor exists')\n  }\n\n  setQueryString() {\n    console.warn('setQueryString called, No Query Accessor exists')\n  }\n\n  getQueryString() {\n    console.warn('getQueryString called, No Query Accessor exists')\n    return ''\n  }\n}\n\nexport const noopQueryAccessor = new NoopQueryAccessor(null)\n"]},"metadata":{},"sourceType":"script"}