{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar ui_1 = require(\"../../../ui\");\n\nvar defaults = require('lodash/defaults');\n\nvar groupBy = require('lodash/groupBy');\n\nvar size = require('lodash/size');\n\nvar toArray = require('lodash/toArray');\n\nvar forEach = require('lodash/forEach');\n\nvar map = require('lodash/map');\n\nvar GroupedSelectedFilters =\n/** @class */\nfunction (_super) {\n  __extends(GroupedSelectedFilters, _super);\n\n  function GroupedSelectedFilters(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.translate = _this.translate.bind(_this);\n    _this.removeFilter = _this.removeFilter.bind(_this);\n    _this.removeFilters = _this.removeFilters.bind(_this);\n    return _this;\n  }\n\n  GroupedSelectedFilters.prototype.defineBEMBlocks = function () {\n    var blockName = this.props.mod || 'sk-filter-groups';\n    return {\n      container: blockName\n    };\n  };\n\n  GroupedSelectedFilters.prototype.getFilters = function () {\n    return this.getQuery().getSelectedFilters();\n  };\n\n  GroupedSelectedFilters.prototype.getGroupedFilters = function () {\n    var filters = this.getFilters();\n    return toArray(groupBy(filters, 'id'));\n  };\n\n  GroupedSelectedFilters.prototype.hasFilters = function () {\n    return size(this.getFilters()) > 0;\n  };\n\n  GroupedSelectedFilters.prototype.removeFilter = function (filter) {\n    filter.remove();\n    this.searchkit.performSearch();\n  };\n\n  GroupedSelectedFilters.prototype.removeFilters = function (filters) {\n    forEach(filters, function (filter) {\n      return filter.remove();\n    });\n    this.searchkit.performSearch();\n  };\n\n  GroupedSelectedFilters.prototype.render = function () {\n    var _this = this;\n\n    var groupComponent = this.props.groupComponent;\n\n    if (!this.hasFilters()) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: this.bemBlocks.container()\n    }, map(this.getGroupedFilters(), function (filters) {\n      return core_1.renderComponent(groupComponent, {\n        key: filters[0].id,\n        className: filters[0].id ? \"filter-group-\" + filters[0].id : undefined,\n        title: _this.translate(filters[0].name),\n        filters: filters,\n        translate: _this.translate,\n        removeFilter: _this.removeFilter,\n        removeFilters: _this.removeFilters\n      });\n    }));\n  };\n\n  GroupedSelectedFilters.propTypes = defaults({}, core_1.SearchkitComponent.propTypes);\n  GroupedSelectedFilters.defaultProps = {\n    groupComponent: ui_1.FilterGroup\n  };\n  return GroupedSelectedFilters;\n}(core_1.SearchkitComponent);\n\nexports.GroupedSelectedFilters = GroupedSelectedFilters;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAQA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,aAAD,CAApB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAMK,GAAG,GAAGL,OAAO,CAAC,YAAD,CAAnB;;AAMA;AAAA;AAAA;EAA4CM;;EAW1C,gCAAYC,KAAZ,EAAiB;IAAjB,YACEC,kBAAMD,KAAN,KAAY,IADd;;IAEEE,KAAI,CAACC,SAAL,GAAiBD,KAAI,CAACC,SAAL,CAAeC,IAAf,CAAoBF,KAApB,CAAjB;IACAA,KAAI,CAACG,YAAL,GAAoBH,KAAI,CAACG,YAAL,CAAkBD,IAAlB,CAAuBF,KAAvB,CAApB;IACAA,KAAI,CAACI,aAAL,GAAqBJ,KAAI,CAACI,aAAL,CAAmBF,IAAnB,CAAwBF,KAAxB,CAArB;;EACD;;EAEDK;IACE,IAAMC,SAAS,GAAG,KAAKR,KAAL,CAAWS,GAAX,IAAkB,kBAApC;IACA,OAAO;MACLC,SAAS,EAAEF;IADN,CAAP;EAGD,CALD;;EAOAD;IACE,OAAO,KAAKI,QAAL,GAAgBC,kBAAhB,EAAP;EACD,CAFD;;EAIAL;IACE,IAAMM,OAAO,GAAG,KAAKC,UAAL,EAAhB;IACA,OAAOlB,OAAO,CAACF,OAAO,CAACmB,OAAD,EAAU,IAAV,CAAR,CAAd;EACD,CAHD;;EAKAN;IACE,OAAOZ,IAAI,CAAC,KAAKmB,UAAL,EAAD,CAAJ,GAA0B,CAAjC;EACD,CAFD;;EAIAP,0DAAaQ,MAAb,EAAmB;IACjBA,MAAM,CAACC,MAAP;IACA,KAAKC,SAAL,CAAeC,aAAf;EACD,CAHD;;EAKAX,2DAAcM,OAAd,EAA4C;IAC1ChB,OAAO,CAACgB,OAAD,EAAU,UAACE,MAAD,EAAO;MAAK,aAAM,CAACC,MAAP;IAAe,CAArC,CAAP;IACA,KAAKC,SAAL,CAAeC,aAAf;EACD,CAHD;;EAKAX;IAAA;;IACU;;IAER,IAAI,CAAC,KAAKY,UAAL,EAAL,EAAwB;MACtB,OAAO,IAAP;IACD;;IAED,OACEC;MAAKC,SAAS,EAAE,KAAKC,SAAL,CAAeZ,SAAf;IAAhB,GACGZ,GAAG,CAAC,KAAKyB,iBAAL,EAAD,EAA2B,UAACV,OAAD,EAAQ;MACrC,8BAAgBW,cAAhB,EAAgC;QAC9BC,GAAG,EAAEZ,OAAO,CAAC,CAAD,CAAP,CAAWa,EADc;QAE9BL,SAAS,EAAER,OAAO,CAAC,CAAD,CAAP,CAAWa,EAAX,GAAgB,kBAAgBb,OAAO,CAAC,CAAD,CAAP,CAAWa,EAA3C,GAAkDC,SAF/B;QAG9BC,KAAK,EAAE1B,KAAI,CAACC,SAAL,CAAeU,OAAO,CAAC,CAAD,CAAP,CAAWgB,IAA1B,CAHuB;QAI9BhB,OAAO,EAAEA,OAJqB;QAK9BV,SAAS,EAAED,KAAI,CAACC,SALc;QAM9BE,YAAY,EAAEH,KAAI,CAACG,YANW;QAO9BC,aAAa,EAAEJ,KAAI,CAACI;MAPU,CAAhC;IAQE,CATA,CADN,CADF;EAeD,CAtBD;;EA3COC,mCAAYf,QAAQ,CAAC,EAAD,EAAKsC,0BAAmBC,SAAxB,CAApB;EAEAxB,sCAAe;IACpBiB,cAAc,EAAEQ;EADI,CAAf;EAgET;AAAC,CAvED,CAA4CF,yBAA5C;;AAAaG","names":["defaults","require","groupBy","size","toArray","forEach","map","__extends","props","_super","_this","translate","bind","removeFilter","removeFilters","GroupedSelectedFilters","blockName","mod","container","getQuery","getSelectedFilters","filters","getFilters","filter","remove","searchkit","performSearch","hasFilters","React","className","bemBlocks","getGroupedFilters","groupComponent","key","id","undefined","title","name","core_1","propTypes","ui_1","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\search\\filters\\selected-filters\\GroupedSelectedFilters.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport {\n  SearchkitComponent,\n  SearchkitComponentProps,\n  RenderComponentType,\n  renderComponent,\n  SelectedFilter\n} from '../../../../core'\n\nimport { FilterGroup } from '../../../ui'\n\nconst defaults = require('lodash/defaults')\nconst groupBy = require('lodash/groupBy')\nconst size = require('lodash/size')\nconst toArray = require('lodash/toArray')\nconst forEach = require('lodash/forEach')\nconst map = require('lodash/map')\n\nexport interface GroupedSelectedFiltersProps extends SearchkitComponentProps {\n  groupComponent?: RenderComponentType<any>\n}\n\nexport class GroupedSelectedFilters extends SearchkitComponent<GroupedSelectedFiltersProps, any> {\n  bemBlocks: {\n    container: Function\n  }\n\n  static propTypes = defaults({}, SearchkitComponent.propTypes)\n\n  static defaultProps = {\n    groupComponent: FilterGroup\n  }\n\n  constructor(props) {\n    super(props)\n    this.translate = this.translate.bind(this)\n    this.removeFilter = this.removeFilter.bind(this)\n    this.removeFilters = this.removeFilters.bind(this)\n  }\n\n  defineBEMBlocks() {\n    const blockName = this.props.mod || 'sk-filter-groups'\n    return {\n      container: blockName\n    }\n  }\n\n  getFilters() {\n    return this.getQuery().getSelectedFilters()\n  }\n\n  getGroupedFilters(): Array<any> {\n    const filters = this.getFilters()\n    return toArray(groupBy(filters, 'id'))\n  }\n\n  hasFilters(): boolean {\n    return size(this.getFilters()) > 0\n  }\n\n  removeFilter(filter) {\n    filter.remove()\n    this.searchkit.performSearch()\n  }\n\n  removeFilters(filters: Array<SelectedFilter>) {\n    forEach(filters, (filter) => filter.remove())\n    this.searchkit.performSearch()\n  }\n\n  render() {\n    const { groupComponent } = this.props\n\n    if (!this.hasFilters()) {\n      return null\n    }\n\n    return (\n      <div className={this.bemBlocks.container()}>\n        {map(this.getGroupedFilters(), (filters) =>\n          renderComponent(groupComponent, {\n            key: filters[0].id,\n            className: filters[0].id ? `filter-group-${filters[0].id}` : undefined,\n            title: this.translate(filters[0].name),\n            filters: filters,\n            translate: this.translate,\n            removeFilter: this.removeFilter,\n            removeFilters: this.removeFilters\n          })\n        )}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}