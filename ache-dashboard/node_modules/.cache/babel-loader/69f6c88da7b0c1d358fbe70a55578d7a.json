{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AggsContainer_1 = require(\"./AggsContainer\");\n\nvar assign = require('lodash/assign');\n\nfunction FieldMetricFactory(metricOp) {\n  return function (key, field) {\n    var _a;\n\n    return AggsContainer_1.AggsContainer(key, (_a = {}, _a[metricOp] = {\n      field: field\n    }, _a));\n  };\n}\n\nexports.FieldMetricFactory = FieldMetricFactory;\nexports.CardinalityMetric = FieldMetricFactory('cardinality');\nexports.MinMetric = FieldMetricFactory('min');\nexports.MaxMetric = FieldMetricFactory('max');\nexports.AvgMetric = FieldMetricFactory('avg');\nexports.SumMetric = FieldMetricFactory('sum');\nexports.StatsMetric = FieldMetricFactory('stats');\n\nfunction TopHitsMetric(key, top_hits) {\n  return AggsContainer_1.AggsContainer(key, {\n    top_hits: top_hits\n  });\n}\n\nexports.TopHitsMetric = TopHitsMetric;\n\nfunction GeoBoundsMetric(key, field, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    geo_bounds: assign({\n      field: field\n    }, options)\n  });\n}\n\nexports.GeoBoundsMetric = GeoBoundsMetric;","map":{"version":3,"mappings":";;;;AAAA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AAEA,SAAgBC,kBAAhB,CAAmCC,QAAnC,EAA2C;EACzC,OAAO,UAACC,GAAD,EAAMC,KAAN,EAAW;;;IAChB,qCAAcD,GAAd,GAAiBE,SACfA,GAACH,QAAD,IAAY;MAAEE,KAAK;IAAP,CADG,IAAjB;EAEE,CAHJ;AAID;;AALDE;AAOaA,4BAAoBL,kBAAkB,CAAC,aAAD,CAAtC;AACAK,oBAAYL,kBAAkB,CAAC,KAAD,CAA9B;AACAK,oBAAYL,kBAAkB,CAAC,KAAD,CAA9B;AACAK,oBAAYL,kBAAkB,CAAC,KAAD,CAA9B;AACAK,oBAAYL,kBAAkB,CAAC,KAAD,CAA9B;AACAK,sBAAcL,kBAAkB,CAAC,OAAD,CAAhC;;AAUb,SAAgBM,aAAhB,CAA8BJ,GAA9B,EAAmCK,QAAnC,EAAiE;EAC/D,OAAOC,8BAAcN,GAAd,EAAmB;IAAEK,QAAQ;EAAV,CAAnB,CAAP;AACD;;AAFDF;;AAIA,SAAgBI,eAAhB,CAAgCP,GAAhC,EAAqCC,KAArC,EAA4CO,OAA5C,EAAwD;EAAZ;IAAAA;EAAY;;EACtD,OAAOF,8BAAcN,GAAd,EAAmB;IAAES,UAAU,EAAEb,MAAM,CAAC;MAAEK,KAAK;IAAP,CAAD,EAAYO,OAAZ;EAApB,CAAnB,CAAP;AACD;;AAFDL","names":["assign","require","FieldMetricFactory","metricOp","key","field","_a","exports","TopHitsMetric","top_hits","AggsContainer_1","GeoBoundsMetric","options","geo_bounds"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\core\\query\\query_dsl\\aggregations\\MetricAggregations.ts"],"sourcesContent":["import { AggsContainer } from './AggsContainer'\nconst assign = require('lodash/assign')\n\nexport function FieldMetricFactory(metricOp) {\n  return (key, field) =>\n    AggsContainer(key, {\n      [metricOp]: { field }\n    })\n}\n\nexport const CardinalityMetric = FieldMetricFactory('cardinality')\nexport const MinMetric = FieldMetricFactory('min')\nexport const MaxMetric = FieldMetricFactory('max')\nexport const AvgMetric = FieldMetricFactory('avg')\nexport const SumMetric = FieldMetricFactory('sum')\nexport const StatsMetric = FieldMetricFactory('stats')\n\nexport interface TopHitsMetricOptions {\n  size: number\n  from?: number\n  _source?: any\n  sort?: any\n  [prop: string]: any\n}\n\nexport function TopHitsMetric(key, top_hits: TopHitsMetricOptions) {\n  return AggsContainer(key, { top_hits })\n}\n\nexport function GeoBoundsMetric(key, field, options = {}) {\n  return AggsContainer(key, { geo_bounds: assign({ field }, options) })\n}\n"]},"metadata":{},"sourceType":"script"}