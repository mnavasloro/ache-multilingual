{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar core_1 = require(\"../../../core\");\n\nvar map = require('lodash/map');\n\nvar identity = require('lodash/identity');\n\nvar Select =\n/** @class */\nfunction (_super) {\n  __extends(Select, _super);\n\n  function Select(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.onChange = _this.onChange.bind(_this);\n    return _this;\n  }\n\n  Select.prototype.onChange = function (e) {\n    var setItems = this.props.setItems;\n    var key = e.target.value;\n    setItems([key]);\n  };\n\n  Select.prototype.getSelectedValue = function () {\n    var _a = this.props.selectedItems,\n        selectedItems = _a === void 0 ? [] : _a;\n    if (selectedItems.length == 0) return null;\n    return selectedItems[0];\n  };\n\n  Select.prototype.render = function () {\n    var _a = this.props,\n        mod = _a.mod,\n        className = _a.className,\n        items = _a.items,\n        disabled = _a.disabled,\n        showCount = _a.showCount,\n        translate = _a.translate,\n        countFormatter = _a.countFormatter;\n    var bemBlocks = {\n      container: core_1.block(mod).el\n    };\n    return React.createElement(\"div\", {\n      className: bemBlocks.container().mix(className).state({\n        disabled: disabled\n      })\n    }, React.createElement(\"select\", {\n      onChange: this.onChange,\n      value: this.getSelectedValue()\n    }, map(items, function (_a) {\n      var key = _a.key,\n          label = _a.label,\n          title = _a.title,\n          disabled = _a.disabled,\n          doc_count = _a.doc_count;\n      var text = translate(label || title || key);\n      if (showCount && doc_count !== undefined) text += \" (\" + countFormatter(doc_count) + \")\";\n      return React.createElement(\"option\", {\n        key: key,\n        value: key,\n        disabled: disabled\n      }, text);\n    })));\n  };\n\n  Select.defaultProps = {\n    mod: 'sk-select',\n    showCount: true,\n    translate: identity,\n    countFormatter: identity\n  };\n  return Select;\n}(React.PureComponent);\n\nexports.Select = Select;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAGA,IAAMA,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAxB;;AAEA;AAAA;AAAA;EAA4BE;;EAQ1B,gBAAYC,KAAZ,EAAiB;IAAjB,YACEC,kBAAMD,KAAN,KAAY,IADd;;IAEEE,KAAI,CAACC,QAAL,GAAgBD,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBF,KAAnB,CAAhB;;EACD;;EAEDG,sCAASC,CAAT,EAAU;IACA;IACR,IAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASC,KAArB;IACAC,QAAQ,CAAC,CAACH,GAAD,CAAD,CAAR;EACD,CAJD;;EAMAF;IACU;IAAA;IACR,IAAIM,aAAa,CAACC,MAAd,IAAwB,CAA5B,EAA+B,OAAO,IAAP;IAC/B,OAAOD,aAAa,CAAC,CAAD,CAApB;EACD,CAJD;;EAMAN;IACQ;IAAA,IAAEQ,YAAF;IAAA,IAAOC,wBAAP;IAAA,IAAkBC,gBAAlB;IAAA,IAAyBC,sBAAzB;IAAA,IAAmCC,wBAAnC;IAAA,IAA8CC,wBAA9C;IAAA,IAAyDC,kCAAzD;IAEN,IAAMC,SAAS,GAAG;MAChBC,SAAS,EAAEC,aAAMT,GAAN,EAAWU;IADN,CAAlB;IAIA,OACEC;MACEV,SAAS,EAAEM,SAAS,CACjBC,SADQ,GAERI,GAFQ,CAEJX,SAFI,EAGRY,KAHQ,CAGF;QAAEV,QAAQ;MAAV,CAHE;IADb,GAMEQ;MAAQrB,QAAQ,EAAE,KAAKA,QAAvB;MAAiCM,KAAK,EAAE,KAAKkB,gBAAL;IAAxC,GACG/B,GAAG,CAACmB,KAAD,EAAQ,UAACa,EAAD,EAA2C;UAAxCrB;UAAKsB;UAAOC;UAAOd;UAAUe;MAC1C,IAAIC,IAAI,GAAGd,SAAS,CAACW,KAAK,IAAIC,KAAT,IAAkBvB,GAAnB,CAApB;MACA,IAAIU,SAAS,IAAIc,SAAS,KAAKE,SAA/B,EAA0CD,IAAI,IAAI,OAAKb,cAAc,CAACY,SAAD,CAAnB,GAA8B,GAAtC;MAC1C,OACEP;QAAQjB,GAAG,EAAEA,GAAb;QAAkBE,KAAK,EAAEF,GAAzB;QAA8BS,QAAQ,EAAEA;MAAxC,GACGgB,IADH,CADF;IAKD,CARG,CADN,CANF,CADF;EAoBD,CA3BD;;EAxBO3B,sBAAoB;IACzBQ,GAAG,EAAE,WADoB;IAEzBI,SAAS,EAAE,IAFc;IAGzBC,SAAS,EAAEpB,QAHc;IAIzBqB,cAAc,EAAErB;EAJS,CAApB;EAoDT;AAAC,CArDD,CAA4B0B,KAAK,CAACU,aAAlC;;AAAaC","names":["map","require","identity","__extends","props","_super","_this","onChange","bind","Select","e","key","target","value","setItems","selectedItems","length","mod","className","items","disabled","showCount","translate","countFormatter","bemBlocks","container","core_1","el","React","mix","state","getSelectedValue","_a","label","title","doc_count","text","undefined","PureComponent","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\ui\\list\\Select.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { block } from '../../../core'\nimport { ListProps } from './ListProps'\n\nconst map = require('lodash/map')\nconst identity = require('lodash/identity')\n\nexport class Select extends React.PureComponent<ListProps, any> {\n  static defaultProps: any = {\n    mod: 'sk-select',\n    showCount: true,\n    translate: identity,\n    countFormatter: identity\n  }\n\n  constructor(props) {\n    super(props)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange(e) {\n    const { setItems } = this.props\n    const key = e.target.value\n    setItems([key])\n  }\n\n  getSelectedValue() {\n    const { selectedItems = [] } = this.props\n    if (selectedItems.length == 0) return null\n    return selectedItems[0]\n  }\n\n  render() {\n    const { mod, className, items, disabled, showCount, translate, countFormatter } = this.props\n\n    const bemBlocks = {\n      container: block(mod).el\n    }\n\n    return (\n      <div\n        className={bemBlocks\n          .container()\n          .mix(className)\n          .state({ disabled })}\n      >\n        <select onChange={this.onChange} value={this.getSelectedValue()}>\n          {map(items, ({ key, label, title, disabled, doc_count }) => {\n            let text = translate(label || title || key)\n            if (showCount && doc_count !== undefined) text += ` (${countFormatter(doc_count)})`\n            return (\n              <option key={key} value={key} disabled={disabled}>\n                {text}\n              </option>\n            )\n          })}\n        </select>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}