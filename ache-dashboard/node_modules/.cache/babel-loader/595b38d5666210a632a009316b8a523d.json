{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar state_1 = require(\"../state\");\n\nvar query_1 = require(\"../query/\");\n\nvar FilterBasedAccessor_1 = require(\"./FilterBasedAccessor\");\n\nvar map = require('lodash/map');\n\nvar each = require('lodash/each');\n\nvar compact = require('lodash/compact');\n\nvar take = require('lodash/take');\n\nvar omitBy = require('lodash/omitBy');\n\nvar isUndefined = require('lodash/isUndefined');\n\nvar HierarchicalFacetAccessor =\n/** @class */\nfunction (_super) {\n  __extends(HierarchicalFacetAccessor, _super);\n\n  function HierarchicalFacetAccessor(key, options) {\n    var _this = _super.call(this, key) || this;\n\n    _this.state = new state_1.LevelState();\n    _this.options = options;\n\n    _this.computeUuids();\n\n    return _this;\n  }\n\n  HierarchicalFacetAccessor.prototype.computeUuids = function () {\n    var _this = this;\n\n    this.uuids = map(this.options.fields, function (field) {\n      return _this.uuid + field;\n    });\n  };\n\n  HierarchicalFacetAccessor.prototype.onResetFilters = function () {\n    this.resetState();\n  };\n\n  HierarchicalFacetAccessor.prototype.getBuckets = function (level) {\n    var field = this.options.fields[level];\n    var buckets = this.getAggregations([this.options.id, field, field, 'buckets'], []);\n    return map(buckets, function (item) {\n      item.key = String(item.key);\n      return item;\n    });\n  };\n\n  HierarchicalFacetAccessor.prototype.getOrder = function () {\n    var _a;\n\n    if (this.options.orderKey) {\n      var orderDirection = this.options.orderDirection || 'asc';\n      return _a = {}, _a[this.options.orderKey] = orderDirection, _a;\n    }\n  };\n\n  HierarchicalFacetAccessor.prototype.buildSharedQuery = function (query) {\n    var _this = this;\n\n    each(this.options.fields, function (field, i) {\n      var filters = _this.state.getLevel(i);\n\n      var parentFilter = _this.state.getLevel(i - 1);\n\n      var isLeaf = !_this.state.levelHasFilters(i + 1);\n      var filterTerms = map(filters, query_1.TermQuery.bind(null, field));\n\n      if (filterTerms.length > 0) {\n        query = query.addFilter(_this.uuids[i], filterTerms.length > 1 ? query_1.BoolShould(filterTerms) : filterTerms[0]);\n      }\n\n      if (isLeaf) {\n        var selectedFilters = map(filters, function (filter) {\n          return {\n            id: _this.options.id,\n            name: _this.translate(parentFilter[0]) || _this.options.title || _this.translate(field),\n            value: _this.translate(filter),\n            remove: function remove() {\n              _this.state = _this.state.remove(i, filter);\n            }\n          };\n        });\n        query = query.addSelectedFilters(selectedFilters);\n      }\n    });\n    return query;\n  };\n\n  HierarchicalFacetAccessor.prototype.buildOwnQuery = function (query) {\n    var _this = this;\n\n    var lvlAggs = compact(map(this.options.fields, function (field, i) {\n      if (_this.state.levelHasFilters(i - 1) || i == 0) {\n        return query_1.FilterBucket(field, query.getFiltersWithKeys(take(_this.uuids, i)), query_1.TermsBucket(field, field, omitBy({\n          size: _this.options.size,\n          order: _this.getOrder()\n        }, isUndefined)));\n      }\n    }));\n    var aggs = query_1.FilterBucket.apply(void 0, __spreadArrays([this.options.id, query.getFiltersWithoutKeys(this.uuids)], lvlAggs));\n    return query.setAggs(aggs);\n  };\n\n  return HierarchicalFacetAccessor;\n}(FilterBasedAccessor_1.FilterBasedAccessor);\n\nexports.HierarchicalFacetAccessor = HierarchicalFacetAccessor;","map":{"version":3,"mappings":"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","names":["map","require","each","compact","take","omitBy","isUndefined","__extends","key","options","_super","_this","state_1","computeUuids","HierarchicalFacetAccessor","uuids","fields","field","uuid","resetState","level","buckets","getAggregations","id","item","String","orderKey","orderDirection","_a","query","i","filters","state","getLevel","parentFilter","isLeaf","levelHasFilters","filterTerms","query_1","bind","length","addFilter","selectedFilters","filter","name","translate","title","value","remove","addSelectedFilters","lvlAggs","getFiltersWithKeys","size","order","getOrder","aggs","apply","__spreadArrays","getFiltersWithoutKeys","setAggs","FilterBasedAccessor_1","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\core\\accessors\\HierarchicalFacetAccessor.ts"],"sourcesContent":["import { LevelState } from '../state'\nimport { TermQuery, TermsBucket, FilterBucket, BoolShould } from '../query/'\nimport { FilterBasedAccessor } from './FilterBasedAccessor'\nconst map = require('lodash/map')\nconst each = require('lodash/each')\nconst compact = require('lodash/compact')\nconst take = require('lodash/take')\nconst omitBy = require('lodash/omitBy')\nconst isUndefined = require('lodash/isUndefined')\n\nexport interface HierarchicalFacetAccessorOptions {\n  fields: Array<string>\n  size: number\n  id: string\n  title: string\n  orderKey?: string\n  orderDirection?: string\n}\n\nexport class HierarchicalFacetAccessor extends FilterBasedAccessor<LevelState> {\n  state = new LevelState()\n  options: any\n  uuids: Array<string>\n\n  constructor(key, options: HierarchicalFacetAccessorOptions) {\n    super(key)\n    this.options = options\n    this.computeUuids()\n  }\n\n  computeUuids() {\n    this.uuids = map(this.options.fields, (field) => this.uuid + field)\n  }\n\n  onResetFilters() {\n    this.resetState()\n  }\n\n  getBuckets(level) {\n    const field = this.options.fields[level]\n    const buckets: Array<any> = this.getAggregations([this.options.id, field, field, 'buckets'], [])\n    return map(buckets, (item) => {\n      item.key = String(item.key)\n      return item\n    })\n  }\n\n  getOrder() {\n    if (this.options.orderKey) {\n      const orderDirection = this.options.orderDirection || 'asc'\n      return { [this.options.orderKey]: orderDirection }\n    }\n  }\n\n  buildSharedQuery(query) {\n    each(this.options.fields, (field: string, i: number) => {\n      const filters = this.state.getLevel(i)\n      const parentFilter = this.state.getLevel(i - 1)\n      const isLeaf = !this.state.levelHasFilters(i + 1)\n      const filterTerms = map(filters, TermQuery.bind(null, field))\n\n      if (filterTerms.length > 0) {\n        query = query.addFilter(\n          this.uuids[i],\n          filterTerms.length > 1 ? BoolShould(filterTerms) : filterTerms[0]\n        )\n      }\n\n      if (isLeaf) {\n        const selectedFilters = map(filters, (filter) => ({\n          id: this.options.id,\n          name: this.translate(parentFilter[0]) || this.options.title || this.translate(field),\n          value: this.translate(filter),\n          remove: () => {\n            this.state = this.state.remove(i, filter)\n          }\n        }))\n        query = query.addSelectedFilters(selectedFilters)\n      }\n    })\n\n    return query\n  }\n\n  buildOwnQuery(query) {\n    const lvlAggs = compact(\n      map(this.options.fields, (field: string, i: number) => {\n        if (this.state.levelHasFilters(i - 1) || i == 0) {\n          return FilterBucket(\n            field,\n            query.getFiltersWithKeys(take(this.uuids, i)),\n            TermsBucket(\n              field,\n              field,\n              omitBy(\n                {\n                  size: this.options.size,\n                  order: this.getOrder()\n                },\n                isUndefined\n              )\n            )\n          )\n        }\n      })\n    )\n\n    const aggs = FilterBucket(this.options.id, query.getFiltersWithoutKeys(this.uuids), ...lvlAggs)\n\n    return query.setAggs(aggs)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}