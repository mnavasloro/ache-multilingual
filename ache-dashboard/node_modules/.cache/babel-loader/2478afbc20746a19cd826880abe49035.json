{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar core_1 = require(\"../../../core\");\n\nvar defaults = require('lodash/defaults');\n\nvar throttle = require('lodash/throttle');\n\nvar assign = require('lodash/assign');\n\nvar isUndefined = require('lodash/isUndefined');\n\nvar SearchBox =\n/** @class */\nfunction (_super) {\n  __extends(SearchBox, _super);\n\n  function SearchBox(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.translations = SearchBox.translations;\n    _this.state = {\n      focused: false,\n      input: undefined\n    };\n    _this.lastSearchMs = 0;\n    _this.throttledSearch = throttle(function () {\n      _this.searchQuery(_this.accessor.getQueryString());\n    }, props.searchThrottleTime);\n    return _this;\n  }\n\n  SearchBox.prototype.defineBEMBlocks = function () {\n    return {\n      container: this.props.mod\n    };\n  };\n\n  SearchBox.prototype.defineAccessor = function () {\n    var _this = this;\n\n    var _a = this.props,\n        id = _a.id,\n        prefixQueryFields = _a.prefixQueryFields,\n        queryFields = _a.queryFields,\n        queryBuilder = _a.queryBuilder,\n        queryOptions = _a.queryOptions,\n        prefixQueryOptions = _a.prefixQueryOptions;\n    return new core_1.QueryAccessor(id, {\n      prefixQueryFields: prefixQueryFields,\n      prefixQueryOptions: assign({}, prefixQueryOptions),\n      queryFields: queryFields || ['_all'],\n      queryOptions: assign({}, queryOptions),\n      queryBuilder: queryBuilder,\n      onQueryStateChange: function onQueryStateChange() {\n        if (!_this.unmounted && _this.state.input) {\n          _this.setState({\n            input: undefined\n          });\n        }\n      }\n    });\n  };\n\n  SearchBox.prototype.onSubmit = function (event) {\n    event.preventDefault();\n    this.searchQuery(this.getValue());\n  };\n\n  SearchBox.prototype.searchQuery = function (query) {\n    var shouldResetOtherState = false;\n    this.accessor.setQueryString(query, shouldResetOtherState);\n    var now = +new Date();\n    var newSearch = now - this.lastSearchMs <= 2000;\n    this.lastSearchMs = now;\n    this.searchkit.performSearch(newSearch);\n  };\n\n  SearchBox.prototype.getValue = function () {\n    var input = this.state.input;\n\n    if (isUndefined(input)) {\n      return this.getAccessorValue();\n    }\n\n    return input;\n  };\n\n  SearchBox.prototype.getAccessorValue = function () {\n    return (this.accessor.state.getValue() || '') + '';\n  };\n\n  SearchBox.prototype.onChange = function (e) {\n    var query = e.target.value;\n\n    if (this.props.searchOnChange) {\n      this.accessor.setQueryString(query);\n      this.throttledSearch();\n      this.forceUpdate();\n    } else {\n      this.setState({\n        input: query\n      });\n    }\n  };\n\n  SearchBox.prototype.setFocusState = function (focused) {\n    if (!focused) {\n      var input = this.state.input;\n\n      if (this.props.blurAction == 'search' && !isUndefined(input) && input != this.getAccessorValue()) {\n        this.searchQuery(input);\n      }\n\n      this.setState({\n        focused: focused,\n        input: undefined // Flush (should use accessor's state now)\n\n      });\n    } else {\n      this.setState({\n        focused: focused\n      });\n    }\n  };\n\n  SearchBox.prototype.render = function () {\n    if (!this.accessor) return null;\n    var block = this.bemBlocks.container;\n    return React.createElement(\"div\", {\n      className: block().state({\n        focused: this.state.focused\n      })\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit.bind(this)\n    }, React.createElement(\"div\", {\n      className: block('icon')\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      \"data-qa\": \"query\",\n      className: block('text'),\n      placeholder: this.props.placeholder || this.translate('searchbox.placeholder'),\n      value: this.getValue(),\n      onFocus: this.setFocusState.bind(this, true),\n      onBlur: this.setFocusState.bind(this, false),\n      ref: \"queryField\",\n      autoFocus: this.props.autofocus,\n      onChange: this.onChange.bind(this)\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: this.translate('searchbox.button'),\n      className: block('action'),\n      \"data-qa\": \"submit\"\n    }), React.createElement(\"div\", {\n      \"data-qa\": \"loader\",\n      className: block('loader').mix('sk-spinning-loader').state({\n        hidden: !this.isLoading()\n      })\n    })));\n  };\n\n  SearchBox.translations = {\n    'searchbox.placeholder': 'Search',\n    'searchbox.button': 'search'\n  };\n  SearchBox.defaultProps = {\n    id: 'q',\n    mod: 'sk-search-box',\n    searchThrottleTime: 200,\n    blurAction: 'search'\n  };\n  SearchBox.propTypes = defaults({\n    id: PropTypes.string,\n    searchOnChange: PropTypes.bool,\n    searchThrottleTime: PropTypes.number,\n    queryBuilder: PropTypes.func,\n    queryFields: PropTypes.arrayOf(PropTypes.string),\n    autofocus: PropTypes.bool,\n    queryOptions: PropTypes.object,\n    prefixQueryFields: PropTypes.arrayOf(PropTypes.string),\n    prefixQueryOptions: PropTypes.object,\n    translations: core_1.SearchkitComponent.translationsPropType(SearchBox.translations),\n    mod: PropTypes.string,\n    placeholder: PropTypes.string,\n    blurAction: PropTypes.string\n  }, core_1.SearchkitComponent.propTypes);\n  return SearchBox;\n}(core_1.SearchkitComponent);\n\nexports.SearchBox = SearchBox;","map":{"version":3,"mappings":"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","names":["defaults","require","throttle","assign","isUndefined","__extends","props","_super","_this","SearchBox","translations","state","focused","input","undefined","lastSearchMs","throttledSearch","searchQuery","accessor","getQueryString","searchThrottleTime","container","mod","id","prefixQueryFields","queryFields","queryBuilder","queryOptions","prefixQueryOptions","core_1","onQueryStateChange","unmounted","setState","event","preventDefault","getValue","query","shouldResetOtherState","setQueryString","now","Date","newSearch","searchkit","performSearch","getAccessorValue","e","target","value","searchOnChange","forceUpdate","blurAction","block","bemBlocks","React","className","onSubmit","bind","type","placeholder","translate","onFocus","setFocusState","onBlur","ref","autoFocus","autofocus","onChange","mix","hidden","isLoading","PropTypes","string","bool","number","func","arrayOf","object","translationsPropType","propTypes","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\search\\search-box\\SearchBox.tsx"],"sourcesContent":["import * as React from 'react'\nimport * as PropTypes from 'prop-types'\n\nimport { QueryAccessor, SearchkitComponent, SearchkitComponentProps } from '../../../core'\n\nconst defaults = require('lodash/defaults')\nconst throttle = require('lodash/throttle')\nconst assign = require('lodash/assign')\nconst isUndefined = require('lodash/isUndefined')\n\nexport interface SearchBoxProps extends SearchkitComponentProps {\n  searchOnChange?: boolean\n  searchThrottleTime?: number\n  queryFields?: Array<string>\n  queryBuilder?: Function\n  queryOptions?: any\n  autofocus?: boolean\n  id?: string\n  mod?: string\n  placeholder?: string\n  prefixQueryFields?: Array<string>\n  prefixQueryOptions?: Record<string, any>\n  blurAction?: 'search' | 'restore'\n}\n\nexport class SearchBox extends SearchkitComponent<SearchBoxProps, any> {\n  accessor: QueryAccessor\n  lastSearchMs: number\n  throttledSearch: () => void\n\n  static translations: any = {\n    'searchbox.placeholder': 'Search',\n    'searchbox.button': 'search'\n  }\n  translations = SearchBox.translations\n\n  static defaultProps = {\n    id: 'q',\n    mod: 'sk-search-box',\n    searchThrottleTime: 200,\n    blurAction: 'search'\n  }\n\n  static propTypes = defaults(\n    {\n      id: PropTypes.string,\n      searchOnChange: PropTypes.bool,\n      searchThrottleTime: PropTypes.number,\n      queryBuilder: PropTypes.func,\n      queryFields: PropTypes.arrayOf(PropTypes.string),\n      autofocus: PropTypes.bool,\n      queryOptions: PropTypes.object,\n      prefixQueryFields: PropTypes.arrayOf(PropTypes.string),\n      prefixQueryOptions: PropTypes.object,\n      translations: SearchkitComponent.translationsPropType(SearchBox.translations),\n      mod: PropTypes.string,\n      placeholder: PropTypes.string,\n      blurAction: PropTypes.string\n    },\n    SearchkitComponent.propTypes\n  )\n\n  constructor(props: SearchBoxProps) {\n    super(props)\n    this.state = {\n      focused: false,\n      input: undefined\n    }\n    this.lastSearchMs = 0\n    this.throttledSearch = throttle(() => {\n      this.searchQuery(this.accessor.getQueryString())\n    }, props.searchThrottleTime)\n  }\n\n  defineBEMBlocks() {\n    return { container: this.props.mod }\n  }\n\n  defineAccessor() {\n    const {\n      id,\n      prefixQueryFields,\n      queryFields,\n      queryBuilder,\n      queryOptions,\n      prefixQueryOptions\n    } = this.props\n    return new QueryAccessor(id, {\n      prefixQueryFields,\n      prefixQueryOptions: assign({}, prefixQueryOptions),\n      queryFields: queryFields || ['_all'],\n      queryOptions: assign({}, queryOptions),\n      queryBuilder,\n      onQueryStateChange: () => {\n        if (!this.unmounted && this.state.input) {\n          this.setState({ input: undefined })\n        }\n      }\n    })\n  }\n\n  onSubmit(event) {\n    event.preventDefault()\n    this.searchQuery(this.getValue())\n  }\n\n  searchQuery(query) {\n    const shouldResetOtherState = false\n    this.accessor.setQueryString(query, shouldResetOtherState)\n    const now = +new Date()\n    const newSearch = now - this.lastSearchMs <= 2000\n    this.lastSearchMs = now\n    this.searchkit.performSearch(newSearch)\n  }\n\n  getValue() {\n    const { input } = this.state\n    if (isUndefined(input)) {\n      return this.getAccessorValue()\n    }\n    return input\n  }\n\n  getAccessorValue() {\n    return (this.accessor.state.getValue() || '') + ''\n  }\n\n  onChange(e) {\n    const query = e.target.value\n    if (this.props.searchOnChange) {\n      this.accessor.setQueryString(query)\n      this.throttledSearch()\n      this.forceUpdate()\n    } else {\n      this.setState({ input: query })\n    }\n  }\n\n  setFocusState(focused: boolean) {\n    if (!focused) {\n      const { input } = this.state\n      if (\n        this.props.blurAction == 'search' &&\n        !isUndefined(input) &&\n        input != this.getAccessorValue()\n      ) {\n        this.searchQuery(input)\n      }\n      this.setState({\n        focused,\n        input: undefined // Flush (should use accessor's state now)\n      })\n    } else {\n      this.setState({ focused })\n    }\n  }\n\n  render() {\n    if (!this.accessor) return null\n    const block = this.bemBlocks.container\n\n    return (\n      <div className={block().state({ focused: this.state.focused })}>\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <div className={block('icon')}></div>\n          <input\n            type=\"text\"\n            data-qa=\"query\"\n            className={block('text')}\n            placeholder={this.props.placeholder || this.translate('searchbox.placeholder')}\n            value={this.getValue()}\n            onFocus={this.setFocusState.bind(this, true)}\n            onBlur={this.setFocusState.bind(this, false)}\n            ref=\"queryField\"\n            autoFocus={this.props.autofocus}\n            onChange={this.onChange.bind(this)}\n          />\n          <input\n            type=\"submit\"\n            value={this.translate('searchbox.button')}\n            className={block('action')}\n            data-qa=\"submit\"\n          />\n          <div\n            data-qa=\"loader\"\n            className={block('loader')\n              .mix('sk-spinning-loader')\n              .state({ hidden: !this.isLoading() })}\n          ></div>\n        </form>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}