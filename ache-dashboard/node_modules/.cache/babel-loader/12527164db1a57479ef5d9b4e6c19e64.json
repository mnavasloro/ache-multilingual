{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar FastClick_1 = require(\"../../../core/react/FastClick\");\n\nvar ItemListComponents_1 = require(\"./ItemListComponents\");\n\nvar defaults = require('lodash/defaults');\n\nvar ItemHistogramComponent =\n/** @class */\nfunction (_super) {\n  __extends(ItemHistogramComponent, _super);\n\n  function ItemHistogramComponent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ItemHistogramComponent.prototype.getCountRatio = function () {\n    var _a = this.props,\n        rawCount = _a.rawCount,\n        listDocCount = _a.listDocCount;\n\n    if (rawCount == undefined || listDocCount == undefined || listDocCount == 0) {\n      return 0;\n    }\n\n    return rawCount / listDocCount;\n  };\n\n  ItemHistogramComponent.prototype.render = function () {\n    var _a = this.props,\n        bemBlocks = _a.bemBlocks,\n        onClick = _a.onClick,\n        active = _a.active,\n        disabled = _a.disabled,\n        style = _a.style,\n        itemKey = _a.itemKey,\n        label = _a.label,\n        count = _a.count,\n        showCount = _a.showCount,\n        showCheckbox = _a.showCheckbox;\n    var block = bemBlocks.option;\n    var className = block().state({\n      active: active,\n      disabled: disabled,\n      histogram: true\n    }).mix(bemBlocks.container('item'));\n    var barWidth = this.getCountRatio() * 100 + '%';\n    return React.createElement(FastClick_1.FastClick, {\n      handler: onClick\n    }, React.createElement(\"div\", {\n      className: className,\n      style: style,\n      \"data-qa\": \"option\",\n      \"data-key\": itemKey\n    }, React.createElement(\"div\", {\n      className: block('bar-container')\n    }, React.createElement(\"div\", {\n      className: block('bar'),\n      style: {\n        width: barWidth\n      }\n    })), showCheckbox ? React.createElement(\"input\", {\n      type: \"checkbox\",\n      \"data-qa\": \"checkbox\",\n      checked: active,\n      readOnly: true,\n      className: block('checkbox').state({\n        active: active\n      })\n    }) : undefined, React.createElement(\"div\", {\n      \"data-qa\": \"label\",\n      className: block('text')\n    }, label), showCount && count != undefined ? React.createElement(\"div\", {\n      \"data-qa\": \"count\",\n      className: block('count')\n    }, count) : undefined));\n  };\n\n  return ItemHistogramComponent;\n}(React.PureComponent);\n\nexports.ItemHistogramComponent = ItemHistogramComponent;\n\nvar ItemHistogramList =\n/** @class */\nfunction (_super) {\n  __extends(ItemHistogramList, _super);\n\n  function ItemHistogramList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ItemHistogramList.defaultProps = defaults({\n    //mod: \"sk-item-histogram\",\n    itemComponent: ItemHistogramComponent,\n    showCount: true\n  }, ItemListComponents_1.AbstractItemList.defaultProps);\n  return ItemHistogramList;\n}(ItemListComponents_1.AbstractItemList);\n\nexports.ItemHistogramList = ItemHistogramList;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAIA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AAMA;AAAA;AAAA;EAA4CC;;EAA5C;;EA4DC;;EA3DCC;IACQ;IAAA,IAAEC,sBAAF;IAAA,IAAYC,8BAAZ;;IACN,IAAID,QAAQ,IAAIE,SAAZ,IAAyBD,YAAY,IAAIC,SAAzC,IAAsDD,YAAY,IAAI,CAA1E,EAA6E;MAC3E,OAAO,CAAP;IACD;;IACD,OAAOD,QAAQ,GAAGC,YAAlB;EACD,CAND;;EAQAF;IACQ;IAAA,IACJI,wBADI;IAAA,IAEJC,oBAFI;IAAA,IAGJC,kBAHI;IAAA,IAIJC,sBAJI;IAAA,IAKJC,gBALI;IAAA,IAMJC,oBANI;IAAA,IAOJC,gBAPI;IAAA,IAQJC,gBARI;IAAA,IASJC,wBATI;IAAA,IAUJC,8BAVI;IAYN,IAAMC,KAAK,GAAGV,SAAS,CAACW,MAAxB;IACA,IAAMC,SAAS,GAAGF,KAAK,GACpBG,KADe,CACT;MAAEX,MAAM,QAAR;MAAUC,QAAQ,UAAlB;MAAoBW,SAAS,EAAE;IAA/B,CADS,EAEfC,GAFe,CAEXf,SAAS,CAACgB,SAAV,CAAoB,MAApB,CAFW,CAAlB;IAIA,IAAMC,QAAQ,GAAG,KAAKC,aAAL,KAAuB,GAAvB,GAA6B,GAA9C;IAEA,OACEC,oBAACC,qBAAD,EAAU;MAACC,OAAO,EAAEpB;IAAV,CAAV,EACEkB;MAAKP,SAAS,EAAEA,SAAhB;MAA2BR,KAAK,EAAEA,KAAlC;MAAuC,WAAU,QAAjD;MAAyD,YAAWC;IAApE,GACEc;MAAKP,SAAS,EAAEF,KAAK,CAAC,eAAD;IAArB,GACES;MAAKP,SAAS,EAAEF,KAAK,CAAC,KAAD,CAArB;MAA8BN,KAAK,EAAE;QAAEkB,KAAK,EAAEL;MAAT;IAArC,EADF,CADF,EAIGR,YAAY,GACXU;MACEI,IAAI,EAAC,UADP;MACiB,WACP,UAFV;MAGEC,OAAO,EAAEtB,MAHX;MAIEuB,QAAQ,MAJV;MAKEb,SAAS,EAAEF,KAAK,CAAC,UAAD,CAAL,CAAkBG,KAAlB,CAAwB;QAAEX,MAAM;MAAR,CAAxB;IALb,EADW,GASXH,SAbJ,EAeEoB;MAAA,WAAa,OAAb;MAAqBP,SAAS,EAAEF,KAAK,CAAC,MAAD;IAArC,GACGJ,KADH,CAfF,EAkBGE,SAAS,IAAID,KAAK,IAAIR,SAAtB,GACCoB;MAAA,WAAa,OAAb;MAAqBP,SAAS,EAAEF,KAAK,CAAC,OAAD;IAArC,GACGH,KADH,CADD,GAKCR,SAvBJ,CADF,CADF;EA8BD,CAlDD;;EAmDF;AAAC,CA5DD,CAA4CoB,KAAK,CAACO,aAAlD;;AAAaC;;AA8Db;AAAA;AAAA;EAAuChC;;EAAvC;;EASC;;EARQiC,iCAAenC,QAAQ,CAC5B;IACE;IACAoC,aAAa,EAAEjC,sBAFjB;IAGEY,SAAS,EAAE;EAHb,CAD4B,EAM5BsB,sCAAiBC,YANW,CAAvB;EAQT;AAAC,CATD,CAAuCD,qCAAvC;;AAAaH","names":["defaults","require","__extends","ItemHistogramComponent","rawCount","listDocCount","undefined","bemBlocks","onClick","active","disabled","style","itemKey","label","count","showCount","showCheckbox","block","option","className","state","histogram","mix","container","barWidth","getCountRatio","React","FastClick_1","handler","width","type","checked","readOnly","PureComponent","exports","ItemHistogramList","itemComponent","ItemListComponents_1","defaultProps"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\ui\\list\\ItemHistogramList.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { FastClick } from '../../../core/react/FastClick'\nimport { AbstractItemList } from './ItemListComponents'\n\nimport { ItemProps } from './ListProps'\n\nconst defaults = require('lodash/defaults')\n\nexport interface ItemHistogramComponentProps extends ItemProps {\n  showCheckbox: boolean\n}\n\nexport class ItemHistogramComponent extends React.PureComponent<ItemHistogramComponentProps, {}> {\n  getCountRatio() {\n    const { rawCount, listDocCount } = this.props\n    if (rawCount == undefined || listDocCount == undefined || listDocCount == 0) {\n      return 0\n    }\n    return rawCount / listDocCount\n  }\n\n  render() {\n    const {\n      bemBlocks,\n      onClick,\n      active,\n      disabled,\n      style,\n      itemKey,\n      label,\n      count,\n      showCount,\n      showCheckbox\n    } = this.props\n    const block = bemBlocks.option\n    const className = block()\n      .state({ active, disabled, histogram: true })\n      .mix(bemBlocks.container('item'))\n\n    const barWidth = this.getCountRatio() * 100 + '%'\n\n    return (\n      <FastClick handler={onClick}>\n        <div className={className} style={style} data-qa=\"option\" data-key={itemKey}>\n          <div className={block('bar-container')}>\n            <div className={block('bar')} style={{ width: barWidth }} />\n          </div>\n          {showCheckbox ? (\n            <input\n              type=\"checkbox\"\n              data-qa=\"checkbox\"\n              checked={active}\n              readOnly\n              className={block('checkbox').state({ active })}\n            ></input>\n          ) : (\n            undefined\n          )}\n          <div data-qa=\"label\" className={block('text')}>\n            {label}\n          </div>\n          {showCount && count != undefined ? (\n            <div data-qa=\"count\" className={block('count')}>\n              {count}\n            </div>\n          ) : (\n            undefined\n          )}\n        </div>\n      </FastClick>\n    )\n  }\n}\n\nexport class ItemHistogramList extends AbstractItemList {\n  static defaultProps = defaults(\n    {\n      //mod: \"sk-item-histogram\",\n      itemComponent: ItemHistogramComponent,\n      showCount: true\n    },\n    AbstractItemList.defaultProps\n  )\n}\n"]},"metadata":{},"sourceType":"script"}