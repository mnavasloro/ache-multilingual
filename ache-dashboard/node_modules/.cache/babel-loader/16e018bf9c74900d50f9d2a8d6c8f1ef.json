{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar core_1 = require(\"../../../core\");\n\nvar ItemComponents_1 = require(\"./ItemComponents\");\n\nvar map = require('lodash/map');\n\nvar includes = require('lodash/includes');\n\nvar defaults = require('lodash/defaults');\n\nvar identity = require('lodash/identity');\n\nvar AbstractItemList =\n/** @class */\nfunction (_super) {\n  __extends(AbstractItemList, _super);\n\n  function AbstractItemList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractItemList.prototype.isActive = function (option) {\n    var _a = this.props,\n        selectedItems = _a.selectedItems,\n        multiselect = _a.multiselect;\n\n    if (multiselect) {\n      return includes(selectedItems, option.key);\n    }\n\n    if (selectedItems.length == 0) return null;\n    return selectedItems[0] == option.key;\n  };\n\n  AbstractItemList.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        mod = _a.mod,\n        itemComponent = _a.itemComponent,\n        _b = _a.items,\n        items = _b === void 0 ? [] : _b,\n        translate = _a.translate,\n        toggleItem = _a.toggleItem,\n        setItems = _a.setItems,\n        multiselect = _a.multiselect,\n        countFormatter = _a.countFormatter,\n        disabled = _a.disabled,\n        showCount = _a.showCount,\n        className = _a.className,\n        docCount = _a.docCount;\n    var bemBlocks = {\n      container: core_1.block(mod).el,\n      option: core_1.block(mod + \"-option\").el\n    };\n    var toggleFunc = multiselect ? toggleItem : function (key) {\n      return setItems([key]);\n    };\n    var actions = map(items, function (option) {\n      var label = option.title || option.label || option.key;\n      return React.createElement(itemComponent, {\n        label: translate(label),\n        onClick: function onClick() {\n          return toggleFunc(option.key);\n        },\n        bemBlocks: bemBlocks,\n        key: option.key,\n        itemKey: option.key,\n        count: countFormatter(option.doc_count),\n        rawCount: option.doc_count,\n        listDocCount: docCount,\n        disabled: option.disabled,\n        showCount: showCount,\n        active: _this.isActive(option)\n      });\n    });\n    return React.createElement(\"div\", {\n      \"data-qa\": \"options\",\n      className: bemBlocks.container().mix(className).state({\n        disabled: disabled\n      })\n    }, actions);\n  };\n\n  AbstractItemList.defaultProps = {\n    mod: 'sk-item-list',\n    showCount: true,\n    itemComponent: ItemComponents_1.CheckboxItemComponent,\n    translate: identity,\n    multiselect: true,\n    selectItems: [],\n    countFormatter: identity\n  };\n  return AbstractItemList;\n}(React.PureComponent);\n\nexports.AbstractItemList = AbstractItemList;\n\nvar ItemList =\n/** @class */\nfunction (_super) {\n  __extends(ItemList, _super);\n\n  function ItemList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ItemList.defaultProps = defaults({\n    itemComponent: ItemComponents_1.ItemComponent\n  }, AbstractItemList.defaultProps);\n  return ItemList;\n}(AbstractItemList);\n\nexports.ItemList = ItemList;\n\nvar CheckboxItemList =\n/** @class */\nfunction (_super) {\n  __extends(CheckboxItemList, _super);\n\n  function CheckboxItemList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CheckboxItemList.defaultProps = defaults({\n    itemComponent: ItemComponents_1.CheckboxItemComponent\n  }, AbstractItemList.defaultProps);\n  return CheckboxItemList;\n}(AbstractItemList);\n\nexports.CheckboxItemList = CheckboxItemList;\n\nvar Toggle =\n/** @class */\nfunction (_super) {\n  __extends(Toggle, _super);\n\n  function Toggle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Toggle.defaultProps = defaults({\n    itemComponent: ItemComponents_1.ItemComponent,\n    mod: 'sk-toggle',\n    showCount: false\n  }, AbstractItemList.defaultProps);\n  return Toggle;\n}(AbstractItemList);\n\nexports.Toggle = Toggle;\n\nvar Tabs =\n/** @class */\nfunction (_super) {\n  __extends(Tabs, _super);\n\n  function Tabs() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Tabs.defaultProps = defaults({\n    itemComponent: ItemComponents_1.ItemComponent,\n    mod: 'sk-tabs',\n    showCount: false,\n    multiselect: false\n  }, AbstractItemList.defaultProps);\n  return Tabs;\n}(AbstractItemList);\n\nexports.Tabs = Tabs;","map":{"version":3,"mappings":"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","names":["map","require","includes","defaults","identity","__extends","AbstractItemList","option","selectedItems","multiselect","key","length","mod","itemComponent","_b","items","translate","toggleItem","setItems","countFormatter","disabled","showCount","className","docCount","bemBlocks","container","core_1","el","toggleFunc","actions","label","title","React","createElement","onClick","itemKey","count","doc_count","rawCount","listDocCount","active","_this","isActive","mix","state","ItemComponents_1","selectItems","PureComponent","exports","ItemList","defaultProps","CheckboxItemList","Toggle","Tabs"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\ui\\list\\ItemListComponents.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { block } from '../../../core'\nimport { ItemComponent, CheckboxItemComponent } from './ItemComponents'\nimport { ListProps } from './ListProps'\n\nconst map = require('lodash/map')\nconst includes = require('lodash/includes')\nconst defaults = require('lodash/defaults')\nconst identity = require('lodash/identity')\n\nexport interface ItemListProps extends ListProps {\n  itemComponent?: any\n}\n\nexport class AbstractItemList extends React.PureComponent<ItemListProps, {}> {\n  static defaultProps: any = {\n    mod: 'sk-item-list',\n    showCount: true,\n    itemComponent: CheckboxItemComponent,\n    translate: identity,\n    multiselect: true,\n    selectItems: [],\n    countFormatter: identity\n  }\n\n  isActive(option) {\n    const { selectedItems, multiselect } = this.props\n    if (multiselect) {\n      return includes(selectedItems, option.key)\n    }\n    if (selectedItems.length == 0) return null\n    return selectedItems[0] == option.key\n  }\n\n  render() {\n    const {\n      mod,\n      itemComponent,\n      items = [],\n      translate,\n      toggleItem,\n      setItems,\n      multiselect,\n      countFormatter,\n      disabled,\n      showCount,\n      className,\n      docCount\n    } = this.props\n\n    const bemBlocks = {\n      container: block(mod).el,\n      option: block(`${mod}-option`).el\n    }\n\n    const toggleFunc = multiselect ? toggleItem : (key) => setItems([key])\n\n    const actions = map(items, (option) => {\n      const label = option.title || option.label || option.key\n      return React.createElement(itemComponent, {\n        label: translate(label),\n        onClick: () => toggleFunc(option.key),\n        bemBlocks: bemBlocks,\n        key: option.key,\n        itemKey: option.key,\n        count: countFormatter(option.doc_count),\n        rawCount: option.doc_count,\n        listDocCount: docCount,\n        disabled: option.disabled,\n        showCount,\n        active: this.isActive(option)\n      })\n    })\n    return (\n      <div\n        data-qa=\"options\"\n        className={bemBlocks\n          .container()\n          .mix(className)\n          .state({ disabled })}\n      >\n        {actions}\n      </div>\n    )\n  }\n}\n\nexport class ItemList extends AbstractItemList {\n  static defaultProps = defaults(\n    {\n      itemComponent: ItemComponent\n    },\n    AbstractItemList.defaultProps\n  )\n}\n\nexport class CheckboxItemList extends AbstractItemList {\n  static defaultProps = defaults(\n    {\n      itemComponent: CheckboxItemComponent\n    },\n    AbstractItemList.defaultProps\n  )\n}\n\nexport class Toggle extends AbstractItemList {\n  static defaultProps = defaults(\n    {\n      itemComponent: ItemComponent,\n      mod: 'sk-toggle',\n      showCount: false\n    },\n    AbstractItemList.defaultProps\n  )\n}\n\nexport class Tabs extends AbstractItemList {\n  static defaultProps = defaults(\n    {\n      itemComponent: ItemComponent,\n      mod: 'sk-tabs',\n      showCount: false,\n      multiselect: false\n    },\n    AbstractItemList.defaultProps\n  )\n}\n"]},"metadata":{},"sourceType":"script"}