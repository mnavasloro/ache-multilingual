{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"../../../core\");\n\nvar ui_1 = require(\"../../ui\");\n\nvar defaults = require('lodash/defaults');\n\nvar ViewSwitcherToggle =\n/** @class */\nfunction (_super) {\n  __extends(ViewSwitcherToggle, _super);\n\n  function ViewSwitcherToggle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ViewSwitcherToggle.prototype.getViewOptionsSwitcherAccessor = function () {\n    return this.searchkit.getAccessorByType(core_1.ViewOptionsAccessor);\n  };\n\n  ViewSwitcherToggle.prototype.setView = function (view) {\n    this.getViewOptionsSwitcherAccessor().setView(view);\n  };\n\n  ViewSwitcherToggle.prototype.render = function () {\n    var _this = this;\n\n    var viewOptionsAccessor = this.getViewOptionsSwitcherAccessor();\n\n    if (viewOptionsAccessor) {\n      var options = viewOptionsAccessor.options;\n      var selectedOption = viewOptionsAccessor.getSelectedOption().key;\n      return core_1.renderComponent(this.props.listComponent, {\n        mod: this.props.mod,\n        className: this.props.className,\n        disabled: !this.hasHits(),\n        items: options,\n        selectedItems: [selectedOption],\n        toggleItem: this.setView.bind(this),\n        setItems: function setItems(_a) {\n          var item = _a[0];\n          return _this.setView(item);\n        },\n        translate: this.translate\n      });\n    }\n\n    return null;\n  };\n\n  ViewSwitcherToggle.defaultProps = {\n    listComponent: ui_1.Toggle\n  };\n  ViewSwitcherToggle.propTypes = defaults({\n    listComponent: core_1.RenderComponentPropType\n  }, core_1.SearchkitComponent.propTypes);\n  return ViewSwitcherToggle;\n}(core_1.SearchkitComponent);\n\nexports.ViewSwitcherToggle = ViewSwitcherToggle;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AASA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AAMA;AAAA;AAAA;EAAwCC;;EAAxC;;EAsCC;;EA1BCC;IACE,OAAO,KAAKC,SAAL,CAAeC,iBAAf,CAAiCC,0BAAjC,CAAP;EACD,CAFD;;EAIAH,iDAAQI,IAAR,EAAY;IACV,KAAKC,8BAAL,GAAsCC,OAAtC,CAA8CF,IAA9C;EACD,CAFD;;EAIAJ;IAAA;;IACE,IAAMO,mBAAmB,GAAG,KAAKF,8BAAL,EAA5B;;IACA,IAAIE,mBAAJ,EAAyB;MACvB,IAAMC,OAAO,GAAGD,mBAAmB,CAACC,OAApC;MACA,IAAMC,cAAc,GAAGF,mBAAmB,CAACG,iBAApB,GAAwCC,GAA/D;MACA,OAAOR,uBAAgB,KAAKS,KAAL,CAAWC,aAA3B,EAA0C;QAC/CC,GAAG,EAAE,KAAKF,KAAL,CAAWE,GAD+B;QAE/CC,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAFyB;QAG/CC,QAAQ,EAAE,CAAC,KAAKC,OAAL,EAHoC;QAI/CC,KAAK,EAAEV,OAJwC;QAK/CW,aAAa,EAAE,CAACV,cAAD,CALgC;QAM/CW,UAAU,EAAE,KAAKd,OAAL,CAAae,IAAb,CAAkB,IAAlB,CANmC;QAO/CC,QAAQ,EAAE,kBAACC,EAAD,EAAO;cAALC;UAAU,YAAI,CAAClB,OAAL,CAAakB,IAAb;QAAkB,CAPO;QAQ/CC,SAAS,EAAE,KAAKA;MAR+B,CAA1C,CAAP;IAUD;;IACD,OAAO,IAAP;EACD,CAjBD;;EAnBOzB,kCAAe;IACpBa,aAAa,EAAEa;EADK,CAAf;EAIA1B,+BAAYH,QAAQ,CACzB;IACEgB,aAAa,EAAEV;EADjB,CADyB,EAIzBA,0BAAmBwB,SAJM,CAApB;EAiCT;AAAC,CAtCD,CAAwCxB,yBAAxC;;AAAayB","names":["defaults","require","__extends","ViewSwitcherToggle","searchkit","getAccessorByType","core_1","view","getViewOptionsSwitcherAccessor","setView","viewOptionsAccessor","options","selectedOption","getSelectedOption","key","props","listComponent","mod","className","disabled","hasHits","items","selectedItems","toggleItem","bind","setItems","_a","item","translate","ui_1","propTypes","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\display\\view-switcher\\ViewSwitcherToggle.tsx"],"sourcesContent":["import {\n  SearchkitComponent,\n  SearchkitComponentProps,\n  ViewOptionsAccessor,\n  RenderComponentType,\n  RenderComponentPropType,\n  renderComponent\n} from '../../../core'\n\nimport { Toggle, ListProps } from '../../ui'\n\nconst defaults = require('lodash/defaults')\n\nexport interface ViewSwitcherProps extends SearchkitComponentProps {\n  listComponent?: RenderComponentType<ListProps>\n}\n\nexport class ViewSwitcherToggle extends SearchkitComponent<ViewSwitcherProps, any> {\n  static defaultProps = {\n    listComponent: Toggle\n  }\n\n  static propTypes = defaults(\n    {\n      listComponent: RenderComponentPropType\n    },\n    SearchkitComponent.propTypes\n  )\n\n  getViewOptionsSwitcherAccessor() {\n    return this.searchkit.getAccessorByType(ViewOptionsAccessor)\n  }\n\n  setView(view) {\n    this.getViewOptionsSwitcherAccessor().setView(view)\n  }\n\n  render(): React.ReactElement<any> {\n    const viewOptionsAccessor = this.getViewOptionsSwitcherAccessor()\n    if (viewOptionsAccessor) {\n      const options = viewOptionsAccessor.options\n      const selectedOption = viewOptionsAccessor.getSelectedOption().key\n      return renderComponent(this.props.listComponent, {\n        mod: this.props.mod,\n        className: this.props.className,\n        disabled: !this.hasHits(),\n        items: options,\n        selectedItems: [selectedOption],\n        toggleItem: this.setView.bind(this),\n        setItems: ([item]) => this.setView(item),\n        translate: this.translate\n      })\n    }\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"script"}