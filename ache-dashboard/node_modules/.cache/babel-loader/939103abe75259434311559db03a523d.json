{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar State_1 = require(\"./State\");\n\nvar indexOf = require('lodash/indexOf');\n\nvar without = require('lodash/without');\n\nvar ArrayState =\n/** @class */\nfunction (_super) {\n  __extends(ArrayState, _super);\n\n  function ArrayState() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ArrayState.prototype.getValue = function () {\n    return this.value || [];\n  };\n\n  ArrayState.prototype.toggle = function (val) {\n    if (this.contains(val)) {\n      return this.remove(val);\n    }\n\n    return this.add(val);\n  };\n\n  ArrayState.prototype.clear = function () {\n    return this.create([]);\n  };\n\n  ArrayState.prototype.remove = function (val) {\n    return this.create(without(this.getValue(), val));\n  };\n\n  ArrayState.prototype.add = function (val) {\n    return this.create(this.getValue().concat(val));\n  };\n\n  ArrayState.prototype.contains = function (val) {\n    return indexOf(this.value, val) !== -1;\n  };\n\n  return ArrayState;\n}(State_1.State);\n\nexports.ArrayState = ArrayState;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAAvB;;AAEA;AAAA;AAAA;EAAgCE;;EAAhC;;EAsBC;;EArBCC;IACE,OAAO,KAAKC,KAAL,IAAc,EAArB;EACD,CAFD;;EAGAD,wCAAOE,GAAP,EAAU;IACR,IAAI,KAAKC,QAAL,CAAcD,GAAd,CAAJ,EAAwB;MACtB,OAAO,KAAKE,MAAL,CAAYF,GAAZ,CAAP;IACD;;IACD,OAAO,KAAKG,GAAL,CAASH,GAAT,CAAP;EACD,CALD;;EAMAF;IACE,OAAO,KAAKM,MAAL,CAAY,EAAZ,CAAP;EACD,CAFD;;EAGAN,wCAAOE,GAAP,EAAU;IACR,OAAO,KAAKI,MAAL,CAAYR,OAAO,CAAC,KAAKS,QAAL,EAAD,EAAkBL,GAAlB,CAAnB,CAAP;EACD,CAFD;;EAGAF,qCAAIE,GAAJ,EAAO;IACL,OAAO,KAAKI,MAAL,CAAY,KAAKC,QAAL,GAAgBC,MAAhB,CAAuBN,GAAvB,CAAZ,CAAP;EACD,CAFD;;EAGAF,0CAASE,GAAT,EAAY;IACV,OAAON,OAAO,CAAC,KAAKK,KAAN,EAAaC,GAAb,CAAP,KAA6B,CAAC,CAArC;EACD,CAFD;;EAGF;AAAC,CAtBD,CAAgCO,aAAhC;;AAAaC","names":["indexOf","require","without","__extends","ArrayState","value","val","contains","remove","add","create","getValue","concat","State_1","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\core\\state\\ArrayState.ts"],"sourcesContent":["import { State } from './State'\nconst indexOf = require('lodash/indexOf')\nconst without = require('lodash/without')\n\nexport class ArrayState extends State<Array<string | number>> {\n  getValue() {\n    return this.value || []\n  }\n  toggle(val) {\n    if (this.contains(val)) {\n      return this.remove(val)\n    }\n    return this.add(val)\n  }\n  clear() {\n    return this.create([])\n  }\n  remove(val) {\n    return this.create(without(this.getValue(), val))\n  }\n  add(val) {\n    return this.create(this.getValue().concat(val))\n  }\n  contains(val) {\n    return indexOf(this.value, val) !== -1\n  }\n}\n"]},"metadata":{},"sourceType":"script"}