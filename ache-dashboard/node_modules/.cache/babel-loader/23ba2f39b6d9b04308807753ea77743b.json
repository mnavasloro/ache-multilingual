{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar ui_1 = require(\"../../../ui\");\n\nvar PaginationUtils_1 = require(\"./PaginationUtils\");\n\nvar defaults = require('lodash/defaults');\n\nvar get = require('lodash/get');\n\nvar isNaN = require('lodash/isNaN');\n\nvar Pagination =\n/** @class */\nfunction (_super) {\n  __extends(Pagination, _super);\n\n  function Pagination(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.translations = Pagination.translations;\n    _this.setPage = _this.setPage.bind(_this);\n    return _this;\n  }\n\n  Pagination.prototype.defineAccessor = function () {\n    return new core_1.PaginationAccessor('p');\n  };\n\n  Pagination.prototype.getCurrentPage = function () {\n    return Number(this.accessor.state.getValue()) || 1;\n  };\n\n  Pagination.prototype.getTotalPages = function () {\n    return Math.ceil(this.getHitsCount() / get(this.getQuery(), 'query.size', 10));\n  };\n\n  Pagination.prototype.isDisabled = function (pageNumber) {\n    return isNaN(pageNumber) || pageNumber < 1 || pageNumber > this.getTotalPages();\n  };\n\n  Pagination.prototype.normalizePage = function (page) {\n    if (page === 'previous') return this.getCurrentPage() - 1;else if (page === 'next') return this.getCurrentPage() + 1;\n    return +page;\n  };\n\n  Pagination.prototype.setPage = function (page) {\n    var pageNumber = this.normalizePage(page);\n\n    if (this.isDisabled(pageNumber)) {\n      return;\n    }\n\n    if (pageNumber == this.getCurrentPage()) {\n      return; // Same page, no need to rerun query\n    }\n\n    this.accessor.state = this.accessor.state.setValue(pageNumber);\n    this.searchkit.performSearch();\n  };\n\n  Pagination.prototype.getPages = function () {\n    var _a = this.props,\n        showNumbers = _a.showNumbers,\n        pageScope = _a.pageScope,\n        showText = _a.showText;\n    var currentPage = this.getCurrentPage();\n    var totalPages = this.getTotalPages();\n    var builder = PaginationUtils_1.Paginator.build({\n      showNumbers: showNumbers,\n      showFirst: true,\n      showPrevious: showText,\n      showNext: showText,\n      showEllipsis: showText\n    });\n    return builder(currentPage, totalPages, this.translate, pageScope);\n  };\n\n  Pagination.prototype.render = function () {\n    var _this = this;\n\n    if (!this.accessor) return null;\n    if (!this.hasHits()) return null;\n    var className = core_1.block(this.props.mod).state({\n      numbered: this.props.showNumbers\n    });\n    var view = core_1.renderComponent(this.props.listComponent, {\n      items: this.getPages(),\n      selectedItems: [this.getCurrentPage()],\n      toggleItem: this.setPage,\n      setItems: function setItems(items) {\n        if (items && items.length > 0) _this.setPage(items[0]);\n      },\n      disabled: this.getTotalPages() <= 1\n    });\n    return React.createElement(\"div\", {\n      className: className\n    }, view);\n  };\n\n  Pagination.translations = {\n    'pagination.previous': 'Previous',\n    'pagination.next': 'Next'\n  };\n  Pagination.propTypes = defaults({\n    translations: core_1.SearchkitComponent.translationsPropType(Pagination.translations),\n    listComponent: core_1.RenderComponentPropType,\n    pageScope: PropTypes.number,\n    showNumbers: PropTypes.bool,\n    showText: PropTypes.bool,\n    showLast: PropTypes.bool\n  }, core_1.SearchkitComponent.propTypes);\n  Pagination.defaultProps = {\n    listComponent: ui_1.Toggle,\n    pageScope: 3,\n    showNumbers: false,\n    showText: true,\n    showLast: false,\n    mod: 'sk-pagination-navigation'\n  };\n  return Pagination;\n}(core_1.SearchkitComponent);\n\nexports.Pagination = Pagination;\n\nvar PaginationSelect =\n/** @class */\nfunction (_super) {\n  __extends(PaginationSelect, _super);\n\n  function PaginationSelect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PaginationSelect.defaultProps = defaults({\n    listComponent: ui_1.Select,\n    mod: 'sk-pagination-select',\n    showNumbers: true,\n    showText: false\n  }, Pagination.defaultProps);\n  return PaginationSelect;\n}(Pagination);\n\nexports.PaginationSelect = PaginationSelect;","map":{"version":3,"mappings":"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","names":["defaults","require","get","isNaN","__extends","props","_super","_this","Pagination","translations","setPage","bind","core_1","Number","accessor","state","getValue","Math","ceil","getHitsCount","getQuery","pageNumber","getTotalPages","page","getCurrentPage","normalizePage","isDisabled","setValue","searchkit","performSearch","showNumbers","pageScope","showText","currentPage","totalPages","builder","PaginationUtils_1","build","showFirst","showPrevious","showNext","showEllipsis","translate","hasHits","className","mod","numbered","view","listComponent","items","getPages","selectedItems","toggleItem","setItems","length","disabled","React","translationsPropType","PropTypes","number","bool","showLast","propTypes","ui_1","exports","PaginationSelect","defaultProps"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\search\\pagination\\src\\Pagination.tsx"],"sourcesContent":["import * as React from 'react'\nimport * as PropTypes from 'prop-types'\n\nimport {\n  SearchkitComponent,\n  PaginationAccessor,\n  SearchkitComponentProps,\n  RenderComponentPropType,\n  renderComponent,\n  block\n} from '../../../../core'\n\nimport { Toggle, Select } from '../../../ui'\n\nimport { Paginator } from './PaginationUtils'\nconst defaults = require('lodash/defaults')\nconst get = require('lodash/get')\nconst isNaN = require('lodash/isNaN')\n\nexport interface PaginationProps extends SearchkitComponentProps {\n  listComponent?: any\n  pageScope?: number // Number of page to show before/after the current number\n  showNumbers?: boolean\n  showText?: boolean\n  showLast?: boolean\n}\n\nexport class Pagination extends SearchkitComponent<PaginationProps, any> {\n  accessor: PaginationAccessor\n\n  static translations: any = {\n    'pagination.previous': 'Previous',\n    'pagination.next': 'Next'\n  }\n  translations = Pagination.translations\n\n  static propTypes = defaults(\n    {\n      translations: SearchkitComponent.translationsPropType(Pagination.translations),\n      listComponent: RenderComponentPropType,\n      pageScope: PropTypes.number,\n      showNumbers: PropTypes.bool,\n      showText: PropTypes.bool,\n      showLast: PropTypes.bool\n    },\n    SearchkitComponent.propTypes\n  )\n\n  static defaultProps = {\n    listComponent: Toggle,\n    pageScope: 3,\n    showNumbers: false,\n    showText: true,\n    showLast: false,\n    mod: 'sk-pagination-navigation'\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.setPage = this.setPage.bind(this)\n  }\n\n  defineAccessor() {\n    return new PaginationAccessor('p')\n  }\n\n  getCurrentPage(): number {\n    return Number(this.accessor.state.getValue()) || 1\n  }\n\n  getTotalPages(): number {\n    return Math.ceil(this.getHitsCount() / get(this.getQuery(), 'query.size', 10))\n  }\n\n  isDisabled(pageNumber: number): boolean {\n    return isNaN(pageNumber) || pageNumber < 1 || pageNumber > this.getTotalPages()\n  }\n\n  normalizePage(page: number | string): number {\n    if (page === 'previous') return this.getCurrentPage() - 1\n    else if (page === 'next') return this.getCurrentPage() + 1\n    return +page\n  }\n\n  setPage(page: number | string) {\n    const pageNumber: number = this.normalizePage(page)\n    if (this.isDisabled(pageNumber)) {\n      return\n    }\n    if (pageNumber == this.getCurrentPage()) {\n      return // Same page, no need to rerun query\n    }\n    this.accessor.state = this.accessor.state.setValue(pageNumber)\n    this.searchkit.performSearch()\n  }\n\n  getPages() {\n    const { showNumbers, pageScope, showText } = this.props\n    const currentPage = this.getCurrentPage()\n    const totalPages = this.getTotalPages()\n\n    const builder = Paginator.build({\n      showNumbers,\n      showFirst: true,\n      showPrevious: showText,\n      showNext: showText,\n      showEllipsis: showText\n    })\n    return builder(currentPage, totalPages, this.translate, pageScope)\n  }\n\n  render() {\n    if (!this.accessor) return null\n    if (!this.hasHits()) return null\n    const className = block(this.props.mod).state({ numbered: this.props.showNumbers })\n\n    const view = renderComponent(this.props.listComponent, {\n      items: this.getPages(),\n      selectedItems: [this.getCurrentPage()],\n      toggleItem: this.setPage,\n      setItems: (items) => {\n        if (items && items.length > 0) this.setPage(items[0])\n      },\n      disabled: this.getTotalPages() <= 1\n    })\n\n    return <div className={className}>{view}</div>\n  }\n}\n\nexport class PaginationSelect extends Pagination {\n  static defaultProps = defaults(\n    {\n      listComponent: Select,\n      mod: 'sk-pagination-select',\n      showNumbers: true,\n      showText: false\n    },\n    Pagination.defaultProps\n  )\n}\n"]},"metadata":{},"sourceType":"script"}