{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar state_1 = require(\"../state\");\n\nvar query_1 = require(\"../query\");\n\nvar FilterBasedAccessor_1 = require(\"./FilterBasedAccessor\");\n\nvar assign = require('lodash/assign');\n\nvar map = require('lodash/map');\n\nvar omitBy = require('lodash/omitBy');\n\nvar isUndefined = require('lodash/isUndefined');\n\nvar each = require('lodash/each');\n\nvar FacetAccessor =\n/** @class */\nfunction (_super) {\n  __extends(FacetAccessor, _super);\n\n  function FacetAccessor(key, options) {\n    var _this = _super.call(this, key, options.id) || this;\n\n    _this.state = new state_1.ArrayState();\n    _this.translations = FacetAccessor.translations;\n    _this.options = options;\n    _this.defaultSize = options.size;\n    _this.options.facetsPerPage = _this.options.facetsPerPage || 50;\n    _this.size = _this.defaultSize;\n    _this.loadAggregations = isUndefined(_this.options.loadAggregations) ? true : _this.options.loadAggregations;\n\n    if (options.translations) {\n      _this.translations = assign({}, _this.translations, options.translations);\n    }\n\n    _this.options.fieldOptions = _this.options.fieldOptions || {\n      type: 'embedded'\n    };\n    _this.options.fieldOptions.field = _this.options.field;\n    _this.fieldContext = query_1.FieldContextFactory(_this.options.fieldOptions);\n    return _this;\n  }\n\n  FacetAccessor.prototype.getRawBuckets = function () {\n    return this.getAggregations([this.uuid, this.fieldContext.getAggregationPath(), this.options.field, 'buckets'], []);\n  };\n\n  FacetAccessor.prototype.getBuckets = function () {\n    var rawBuckets = this.getRawBuckets();\n    var keyIndex = {};\n    each(rawBuckets, function (item) {\n      item.key = item.key_as_string || String(item.key);\n      keyIndex[item.key] = item;\n    });\n    var missingFilters = [];\n    each(this.state.getValue(), function (filterKey) {\n      if (keyIndex[filterKey]) {\n        var filter = keyIndex[filterKey];\n        filter.selected = true;\n      } else {\n        missingFilters.push({\n          key: filterKey,\n          missing: true,\n          selected: true\n        });\n      }\n    });\n    var buckets = missingFilters.length > 0 ? missingFilters.concat(rawBuckets) : rawBuckets;\n    return buckets;\n  };\n\n  FacetAccessor.prototype.getDocCount = function () {\n    return this.getAggregations([this.uuid, this.fieldContext.getAggregationPath(), 'doc_count'], 0);\n  };\n\n  FacetAccessor.prototype.getCount = function () {\n    return this.getAggregations([this.uuid, this.fieldContext.getAggregationPath(), this.options.field + '_count', 'value'], 0);\n  };\n\n  FacetAccessor.prototype.setViewMoreOption = function (option) {\n    this.size = option.size;\n  };\n\n  FacetAccessor.prototype.getMoreSizeOption = function () {\n    var option = {\n      size: 0,\n      label: ''\n    };\n    var total = this.getCount();\n    var facetsPerPage = this.options.facetsPerPage;\n    if (total <= this.defaultSize) return null;\n\n    if (total <= this.size) {\n      option = {\n        size: this.defaultSize,\n        label: this.translate('facets.view_less')\n      };\n    } else if (this.size + facetsPerPage >= total) {\n      option = {\n        size: total,\n        label: this.translate('facets.view_all')\n      };\n    } else if (this.size + facetsPerPage < total) {\n      option = {\n        size: this.size + facetsPerPage,\n        label: this.translate('facets.view_more')\n      };\n    } else if (total) {\n      option = null;\n    }\n\n    return option;\n  };\n\n  FacetAccessor.prototype.isOrOperator = function () {\n    return this.options.operator === 'OR';\n  };\n\n  FacetAccessor.prototype.getBoolBuilder = function () {\n    return this.isOrOperator() ? query_1.BoolShould : query_1.BoolMust;\n  };\n\n  FacetAccessor.prototype.getOrder = function () {\n    var _a;\n\n    if (this.options.orderKey) {\n      var orderDirection = this.options.orderDirection || 'asc';\n      return _a = {}, _a[this.options.orderKey] = orderDirection, _a;\n    }\n  };\n\n  FacetAccessor.prototype.buildSharedQuery = function (query) {\n    var _this = this;\n\n    var filters = this.state.getValue();\n    var filterTerms = map(filters, function (filter) {\n      return _this.fieldContext.wrapFilter(query_1.TermQuery(_this.options.field, filter));\n    });\n    var selectedFilters = map(filters, function (filter) {\n      return {\n        name: _this.options.title || _this.translate(_this.options.field),\n        value: _this.translate(filter),\n        id: _this.options.id,\n        remove: function remove() {\n          return _this.state = _this.state.remove(filter);\n        }\n      };\n    });\n    var boolBuilder = this.getBoolBuilder();\n\n    if (filterTerms.length > 0) {\n      query = query.addFilter(this.uuid, boolBuilder(filterTerms)).addSelectedFilters(selectedFilters);\n    }\n\n    return query;\n  };\n\n  FacetAccessor.prototype.buildOwnQuery = function (query) {\n    if (!this.loadAggregations) {\n      return query;\n    }\n\n    var excludedKey = this.isOrOperator() ? this.uuid : undefined;\n    return query.setAggs(query_1.FilterBucket.apply(void 0, __spreadArrays([this.uuid, query.getFiltersWithoutKeys(excludedKey)], this.fieldContext.wrapAggregations(query_1.TermsBucket(this.options.field, this.options.field, omitBy({\n      size: this.size,\n      order: this.getOrder(),\n      include: this.options.include,\n      exclude: this.options.exclude,\n      min_doc_count: this.options.min_doc_count\n    }, isUndefined)), query_1.CardinalityMetric(this.options.field + '_count', this.options.field)))));\n  };\n\n  FacetAccessor.translations = {\n    'facets.view_more': 'View more',\n    'facets.view_less': 'View less',\n    'facets.view_all': 'View all'\n  };\n  return FacetAccessor;\n}(FilterBasedAccessor_1.FilterBasedAccessor);\n\nexports.FacetAccessor = FacetAccessor;","map":{"version":3,"mappings":"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","names":["assign","require","map","omitBy","isUndefined","each","__extends","key","options","_super","id","_this","state_1","FacetAccessor","translations","defaultSize","size","facetsPerPage","loadAggregations","fieldOptions","type","field","fieldContext","query_1","getAggregations","uuid","getAggregationPath","rawBuckets","getRawBuckets","keyIndex","item","key_as_string","String","missingFilters","state","getValue","filterKey","filter","selected","push","missing","buckets","length","concat","option","label","total","getCount","translate","operator","isOrOperator","orderKey","orderDirection","_a","query","filters","filterTerms","wrapFilter","selectedFilters","name","title","value","remove","boolBuilder","getBoolBuilder","addFilter","addSelectedFilters","excludedKey","undefined","setAggs","apply","__spreadArrays","getFiltersWithoutKeys","wrapAggregations","order","getOrder","include","exclude","min_doc_count","FilterBasedAccessor_1","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\core\\accessors\\FacetAccessor.ts"],"sourcesContent":["import { ArrayState } from '../state'\nimport {\n  TermQuery,\n  TermsBucket,\n  CardinalityMetric,\n  BoolShould,\n  BoolMust,\n  SelectedFilter,\n  FilterBucket,\n  FieldContextFactory,\n  FieldContext,\n  FieldOptions\n} from '../query'\nimport { FilterBasedAccessor } from './FilterBasedAccessor'\nconst assign = require('lodash/assign')\nconst map = require('lodash/map')\nconst omitBy = require('lodash/omitBy')\nconst isUndefined = require('lodash/isUndefined')\nconst each = require('lodash/each')\n\nexport interface FacetAccessorOptions {\n  operator?: string\n  title?: string\n  id?: string\n  field: string\n  size: number\n  facetsPerPage?: number\n  translations?: Record<string, any>\n  include?: Array<string> | string\n  exclude?: Array<string> | string\n  orderKey?: string\n  orderDirection?: string\n  min_doc_count?: number\n  loadAggregations?: boolean\n  fieldOptions?: FieldOptions\n}\n\nexport interface ISizeOption {\n  label: string\n  size: number\n}\n\nexport class FacetAccessor extends FilterBasedAccessor<ArrayState> {\n  state = new ArrayState()\n  options: any\n  defaultSize: number\n  size: number\n  uuid: string\n  loadAggregations: boolean\n  fieldContext: FieldContext\n\n  static translations: any = {\n    'facets.view_more': 'View more',\n    'facets.view_less': 'View less',\n    'facets.view_all': 'View all'\n  }\n  translations = FacetAccessor.translations\n\n  constructor(key, options: FacetAccessorOptions) {\n    super(key, options.id)\n    this.options = options\n    this.defaultSize = options.size\n    this.options.facetsPerPage = this.options.facetsPerPage || 50\n    this.size = this.defaultSize\n    this.loadAggregations = isUndefined(this.options.loadAggregations)\n      ? true\n      : this.options.loadAggregations\n    if (options.translations) {\n      this.translations = assign({}, this.translations, options.translations)\n    }\n    this.options.fieldOptions = this.options.fieldOptions || { type: 'embedded' }\n    this.options.fieldOptions.field = this.options.field\n    this.fieldContext = FieldContextFactory(this.options.fieldOptions)\n  }\n\n  getRawBuckets() {\n    return this.getAggregations(\n      [this.uuid, this.fieldContext.getAggregationPath(), this.options.field, 'buckets'],\n      []\n    )\n  }\n\n  getBuckets() {\n    const rawBuckets: Array<any> = this.getRawBuckets()\n    const keyIndex = {}\n    each(rawBuckets, (item) => {\n      item.key = item.key_as_string || String(item.key)\n      keyIndex[item.key] = item\n    })\n    const missingFilters = []\n    each(this.state.getValue(), (filterKey) => {\n      if (keyIndex[filterKey]) {\n        const filter: any = keyIndex[filterKey]\n        filter.selected = true\n      } else {\n        missingFilters.push({\n          key: filterKey,\n          missing: true,\n          selected: true\n        })\n      }\n    })\n    const buckets = missingFilters.length > 0 ? missingFilters.concat(rawBuckets) : rawBuckets\n\n    return buckets\n  }\n\n  getDocCount() {\n    return this.getAggregations([this.uuid, this.fieldContext.getAggregationPath(), 'doc_count'], 0)\n  }\n\n  getCount(): number {\n    return this.getAggregations(\n      [this.uuid, this.fieldContext.getAggregationPath(), this.options.field + '_count', 'value'],\n      0\n    ) as number\n  }\n\n  setViewMoreOption(option: ISizeOption) {\n    this.size = option.size\n  }\n\n  getMoreSizeOption(): ISizeOption {\n    let option = { size: 0, label: '' }\n    const total = this.getCount()\n    const facetsPerPage = this.options.facetsPerPage\n    if (total <= this.defaultSize) return null\n\n    if (total <= this.size) {\n      option = { size: this.defaultSize, label: this.translate('facets.view_less') }\n    } else if (this.size + facetsPerPage >= total) {\n      option = { size: total, label: this.translate('facets.view_all') }\n    } else if (this.size + facetsPerPage < total) {\n      option = { size: this.size + facetsPerPage, label: this.translate('facets.view_more') }\n    } else if (total) {\n      option = null\n    }\n\n    return option\n  }\n\n  isOrOperator() {\n    return this.options.operator === 'OR'\n  }\n\n  getBoolBuilder() {\n    return this.isOrOperator() ? BoolShould : BoolMust\n  }\n\n  getOrder() {\n    if (this.options.orderKey) {\n      const orderDirection = this.options.orderDirection || 'asc'\n      return { [this.options.orderKey]: orderDirection }\n    }\n  }\n\n  buildSharedQuery(query) {\n    const filters = this.state.getValue()\n    const filterTerms = map(filters, (filter) =>\n      this.fieldContext.wrapFilter(TermQuery(this.options.field, filter))\n    )\n    const selectedFilters: Array<SelectedFilter> = map(filters, (filter) => ({\n      name: this.options.title || this.translate(this.options.field),\n      value: this.translate(filter),\n      id: this.options.id,\n      remove: () => (this.state = this.state.remove(filter))\n    }))\n    const boolBuilder = this.getBoolBuilder()\n    if (filterTerms.length > 0) {\n      query = query\n        .addFilter(this.uuid, boolBuilder(filterTerms))\n        .addSelectedFilters(selectedFilters)\n    }\n\n    return query\n  }\n\n  buildOwnQuery(query) {\n    if (!this.loadAggregations) {\n      return query\n    }\n    const excludedKey = this.isOrOperator() ? this.uuid : undefined\n    return query.setAggs(\n      FilterBucket(\n        this.uuid,\n        query.getFiltersWithoutKeys(excludedKey),\n        ...this.fieldContext.wrapAggregations(\n          TermsBucket(\n            this.options.field,\n            this.options.field,\n            omitBy(\n              {\n                size: this.size,\n                order: this.getOrder(),\n                include: this.options.include,\n                exclude: this.options.exclude,\n                min_doc_count: this.options.min_doc_count\n              },\n              isUndefined\n            )\n          ),\n          CardinalityMetric(this.options.field + '_count', this.options.field)\n        )\n      )\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}