{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = require(\"prop-types\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar NoHitsErrorDisplay_1 = require(\"./NoHitsErrorDisplay\");\n\nvar NoHitsDisplay_1 = require(\"./NoHitsDisplay\");\n\nvar defaults = require('lodash/defaults');\n\nvar NoHits =\n/** @class */\nfunction (_super) {\n  __extends(NoHits, _super);\n\n  function NoHits() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.translations = NoHits.translations;\n    return _this;\n  }\n\n  NoHits.prototype.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n\n    this.noFiltersAccessor = this.searchkit.addAccessor(new core_1.NoFiltersHitCountAccessor());\n\n    if (this.props.suggestionsField) {\n      this.suggestionsAccessor = this.searchkit.addAccessor(new core_1.SuggestionsAccessor(this.props.suggestionsField));\n    }\n  };\n\n  NoHits.prototype.defineBEMBlocks = function () {\n    var block = this.props.mod || 'sk-no-hits';\n    return {\n      container: block\n    };\n  };\n\n  NoHits.prototype.getSuggestion = function () {\n    return this.suggestionsAccessor && this.suggestionsAccessor.getSuggestion();\n  };\n\n  NoHits.prototype.setQueryString = function (query) {\n    this.searchkit.getQueryAccessor().setQueryString(query, true);\n    this.searchkit.performSearch(true);\n  };\n\n  NoHits.prototype.resetFilters = function () {\n    this.searchkit.getQueryAccessor().keepOnlyQueryState();\n    this.searchkit.performSearch(true);\n  };\n\n  NoHits.prototype.resetSearch = function () {\n    this.searchkit.getQueryAccessor().resetState();\n    this.searchkit.performSearch(true);\n  };\n\n  NoHits.prototype.getFilterCount = function () {\n    return this.noFiltersAccessor && this.noFiltersAccessor.getCount();\n  };\n\n  NoHits.prototype.render = function () {\n    if ((this.hasHits() || this.isInitialLoading() || this.isLoading()) && !this.getError()) return null;\n\n    if (this.getError()) {\n      var props_1 = {\n        errorLabel: this.translate('NoHits.Error'),\n        resetSearchFn: this.resetSearch.bind(this),\n        translate: this.translate,\n        bemBlocks: this.bemBlocks,\n        tryAgainLabel: this.translate('NoHits.ResetSearch'),\n        error: this.getError()\n      };\n      return core_1.renderComponent(this.props.errorComponent, props_1);\n    }\n\n    var suggestion = this.getSuggestion();\n    var query = this.getQuery().getQueryString();\n    var infoKey = suggestion ? 'NoHits.NoResultsFoundDidYouMean' : 'NoHits.NoResultsFound';\n    var props = {\n      noResultsLabel: this.translate(infoKey, {\n        query: query,\n        suggestion: suggestion\n      }),\n      translate: this.translate,\n      bemBlocks: this.bemBlocks,\n      suggestion: suggestion,\n      query: query,\n      filtersCount: this.getFilterCount(),\n      resetFiltersFn: this.resetFilters.bind(this),\n      setSuggestionFn: this.setQueryString.bind(this, suggestion)\n    };\n    return core_1.renderComponent(this.props.component, props);\n  };\n\n  NoHits.translations = {\n    'NoHits.NoResultsFound': 'No results found for {query}.',\n    'NoHits.NoResultsFoundDidYouMean': 'No results found for {query}. Did you mean {suggestion}?',\n    'NoHits.DidYouMean': 'Search for {suggestion} instead',\n    'NoHits.SearchWithoutFilters': 'Search for {query} without filters',\n    'NoHits.Error': \"We're sorry, an issue occurred when fetching your results. Please try again.\",\n    'NoHits.ResetSearch': 'Reset Search'\n  };\n  NoHits.propTypes = defaults({\n    suggestionsField: PropTypes.string,\n    translations: core_1.SearchkitComponent.translationsPropType(NoHits.translations)\n  }, core_1.SearchkitComponent.propTypes);\n  NoHits.defaultProps = {\n    errorComponent: NoHitsErrorDisplay_1.NoHitsErrorDisplay,\n    component: NoHitsDisplay_1.NoHitsDisplay\n  };\n  return NoHits;\n}(core_1.SearchkitComponent);\n\nexports.NoHits = NoHits;","map":{"version":3,"mappings":"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","names":["defaults","require","__extends","_this","NoHits","translations","_super","componentDidMount","call","noFiltersAccessor","searchkit","addAccessor","core_1","props","suggestionsField","suggestionsAccessor","block","mod","container","getSuggestion","query","getQueryAccessor","setQueryString","performSearch","keepOnlyQueryState","resetState","getCount","hasHits","isInitialLoading","isLoading","getError","props_1","errorLabel","translate","resetSearchFn","resetSearch","bind","bemBlocks","tryAgainLabel","error","errorComponent","suggestion","getQuery","getQueryString","infoKey","noResultsLabel","filtersCount","getFilterCount","resetFiltersFn","resetFilters","setSuggestionFn","component","PropTypes","string","translationsPropType","propTypes","NoHitsErrorDisplay_1","NoHitsDisplay_1","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\search\\hits\\src\\NoHits.tsx"],"sourcesContent":["import * as PropTypes from 'prop-types'\n\nimport {\n  SearchkitComponent,\n  SearchkitComponentProps,\n  NoFiltersHitCountAccessor,\n  SuggestionsAccessor,\n  RenderComponentType,\n  renderComponent\n} from '../../../../core'\n\nimport { NoHitsErrorDisplay, NoHitsErrorDisplayProps } from './NoHitsErrorDisplay'\nimport { NoHitsDisplay, NoHitsDisplayProps } from './NoHitsDisplay'\n\nconst defaults = require('lodash/defaults')\n\nexport interface NoHitsProps extends SearchkitComponentProps {\n  suggestionsField?: string\n  errorComponent?: RenderComponentType<NoHitsErrorDisplayProps>\n  component?: RenderComponentType<NoHitsDisplayProps>\n}\n\nexport class NoHits extends SearchkitComponent<NoHitsProps, any> {\n  noFiltersAccessor: NoFiltersHitCountAccessor\n  suggestionsAccessor: SuggestionsAccessor\n  bemBlocks: {\n    container: Function\n  }\n\n  static translations = {\n    'NoHits.NoResultsFound': 'No results found for {query}.',\n    'NoHits.NoResultsFoundDidYouMean': 'No results found for {query}. Did you mean {suggestion}?',\n    'NoHits.DidYouMean': 'Search for {suggestion} instead',\n    'NoHits.SearchWithoutFilters': 'Search for {query} without filters',\n    'NoHits.Error': \"We're sorry, an issue occurred when fetching your results. Please try again.\",\n    'NoHits.ResetSearch': 'Reset Search'\n  }\n  translations = NoHits.translations\n\n  static propTypes = defaults(\n    {\n      suggestionsField: PropTypes.string,\n      translations: SearchkitComponent.translationsPropType(NoHits.translations)\n    },\n    SearchkitComponent.propTypes\n  )\n\n  static defaultProps = {\n    errorComponent: NoHitsErrorDisplay,\n    component: NoHitsDisplay\n  }\n\n  componentDidMount() {\n    super.componentDidMount()\n    this.noFiltersAccessor = this.searchkit.addAccessor(new NoFiltersHitCountAccessor())\n    if (this.props.suggestionsField) {\n      this.suggestionsAccessor = this.searchkit.addAccessor(\n        new SuggestionsAccessor(this.props.suggestionsField)\n      )\n    }\n  }\n\n  defineBEMBlocks() {\n    const block = this.props.mod || 'sk-no-hits'\n    return {\n      container: block\n    }\n  }\n\n  getSuggestion() {\n    return this.suggestionsAccessor && this.suggestionsAccessor.getSuggestion()\n  }\n\n  setQueryString(query) {\n    this.searchkit.getQueryAccessor().setQueryString(query, true)\n    this.searchkit.performSearch(true)\n  }\n\n  resetFilters() {\n    this.searchkit.getQueryAccessor().keepOnlyQueryState()\n    this.searchkit.performSearch(true)\n  }\n\n  resetSearch() {\n    this.searchkit.getQueryAccessor().resetState()\n    this.searchkit.performSearch(true)\n  }\n\n  getFilterCount() {\n    return this.noFiltersAccessor && this.noFiltersAccessor.getCount()\n  }\n\n  render(): React.ReactElement<any> {\n    if ((this.hasHits() || this.isInitialLoading() || this.isLoading()) && !this.getError())\n      return null\n\n    if (this.getError()) {\n      const props: NoHitsErrorDisplayProps = {\n        errorLabel: this.translate('NoHits.Error'),\n        resetSearchFn: this.resetSearch.bind(this),\n        translate: this.translate,\n        bemBlocks: this.bemBlocks,\n        tryAgainLabel: this.translate('NoHits.ResetSearch'),\n        error: this.getError()\n      }\n      return renderComponent(this.props.errorComponent, props)\n    }\n\n    const suggestion: any = this.getSuggestion()\n    const query = this.getQuery().getQueryString()\n    const infoKey = suggestion ? 'NoHits.NoResultsFoundDidYouMean' : 'NoHits.NoResultsFound'\n\n    const props: NoHitsDisplayProps = {\n      noResultsLabel: this.translate(infoKey, { query: query, suggestion: suggestion }),\n      translate: this.translate,\n      bemBlocks: this.bemBlocks,\n      suggestion: suggestion,\n      query: query,\n      filtersCount: this.getFilterCount(),\n      resetFiltersFn: this.resetFilters.bind(this),\n      setSuggestionFn: this.setQueryString.bind(this, suggestion)\n    }\n\n    return renderComponent(this.props.component, props)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}