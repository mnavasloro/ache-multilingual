{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar assign = require('lodash/assign');\n\nfunction MultiMatchQuery(query, options) {\n  if (!query) {\n    return;\n  }\n\n  return {\n    multi_match: assign({\n      query: query\n    }, options)\n  };\n}\n\nexports.MultiMatchQuery = MultiMatchQuery;","map":{"version":3,"mappings":";;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AAWA,SAAgBC,eAAhB,CAAgCC,KAAhC,EAAuCC,OAAvC,EAAiE;EAC/D,IAAI,CAACD,KAAL,EAAY;IACV;EACD;;EAED,OAAO;IACLE,WAAW,EAAEL,MAAM,CAAC;MAAEG,KAAK;IAAP,CAAD,EAAYC,OAAZ;EADd,CAAP;AAGD;;AARDE","names":["assign","require","MultiMatchQuery","query","options","multi_match","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\core\\query\\query_dsl\\full_text\\MultiMatchQuery.ts"],"sourcesContent":["const assign = require('lodash/assign')\n\nexport interface MultiMatchOptions {\n  fields: Array<string>\n  type?: string\n  tie_breaker?: number\n  operator?: string\n  minimum_should_match?: string\n  analyzer?: string\n}\n\nexport function MultiMatchQuery(query, options: MultiMatchOptions) {\n  if (!query) {\n    return\n  }\n\n  return {\n    multi_match: assign({ query }, options)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}