{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nimport React from 'react';\nimport AbstractSeries from '../plot/series/abstract-series';\nimport { DISCRETE_COLOR_RANGE, DEFAULT_OPACITY } from '../theme';\n/**\n * Check if the component is series or not.\n * @param {React.Component} child Component.\n * @returns {boolean} True if the child is series, false otherwise.\n */\n\nexport function isSeriesChild(child) {\n  var prototype = child.type.prototype;\n  return prototype instanceof AbstractSeries;\n}\n/**\n * Get all series from the 'children' object of the component.\n * @param {Object} children Children.\n * @returns {Array} Array of children.\n */\n\nexport function getSeriesChildren(children) {\n  return React.Children.toArray(children).filter(function (child) {\n    return child && isSeriesChild(child);\n  });\n}\n/**\n * Collect the map of repetitions of the series type for all children.\n * @param {Array} children Array of children.\n * @returns {{}} Map of repetitions where sameTypeTotal is the total amount and\n * sameTypeIndex is always 0.\n */\n\nfunction collectSeriesTypesInfo(children) {\n  var result = {};\n  children.filter(isSeriesChild).forEach(function (child) {\n    var displayName = child.type.displayName;\n    var cluster = child.props.cluster;\n\n    if (!result[displayName]) {\n      result[displayName] = {\n        sameTypeTotal: 0,\n        sameTypeIndex: 0,\n        clusters: new Set()\n      };\n    }\n\n    result[displayName].clusters.add(cluster);\n    result[displayName].sameTypeTotal++;\n  });\n  return result;\n}\n/**\n * Check series to see if it has angular data that needs to be converted\n * @param {Array} data - an array of objects to check\n * @returns {Boolean} whether or not this series contains polar configuration\n */\n\n\nfunction seriesHasAngleRadius() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  if (!data) {\n    return false;\n  }\n\n  return data.some(function (row) {\n    return row.radius && row.angle;\n  });\n}\n/**\n * Possibly convert polar coordinates to x/y for computing domain\n * @param {Array} data - an array of objects to check\n * @param {String} attr - the property being checked\n * @returns {Boolean} whether or not this series contains polar configuration\n */\n\n\nfunction prepareData(data) {\n  if (!seriesHasAngleRadius(data)) {\n    return data;\n  }\n\n  return data.map(function (row) {\n    return _extends({}, row, {\n      x: row.radius * Math.cos(row.angle),\n      y: row.radius * Math.sin(row.angle)\n    });\n  });\n}\n/**\n * Collect the stacked data for all children in use. If the children don't have\n * the data (e.g. the child is invalid series or something else), then the child\n * is skipped.\n * Each next value of attr is equal to the previous value plus the difference\n * between attr0 and attr.\n * @param {Array} children Array of children.\n * @param {string} attr Attribute to stack by.\n * @returns {Array} New array of children for the series.\n */\n\n\nexport function getStackedData(children, attr) {\n  var areSomeSeriesStacked = children.some(function (series) {\n    return series && series.props.stack;\n  }); // It stores the last segment position added to each bar, separated by cluster.\n\n  var latestAttrPositions = {};\n  return children.reduce(function (accumulator, series, seriesIndex) {\n    // Skip the children that are not series (e.g. don't have any data).\n    if (!series) {\n      accumulator.push(null);\n      return accumulator;\n    }\n\n    var seriesType = series.type.displayName;\n    var _series$props = series.props,\n        data = _series$props.data,\n        _series$props$cluster = _series$props.cluster,\n        cluster = _series$props$cluster === undefined ? 'default' : _series$props$cluster,\n        stack = _series$props.stack;\n    var preppedData = prepareData(data, attr);\n\n    if (!attr || !preppedData || !preppedData.length || areSomeSeriesStacked && !stack) {\n      accumulator.push(preppedData);\n      return accumulator;\n    }\n\n    var attr0 = attr + '0';\n    var baseAttr = attr === 'y' ? 'x' : 'y';\n    accumulator.push(preppedData.map(function (d, dIndex) {\n      var _extends2, _latestAttrPositions$2;\n\n      if (!latestAttrPositions[cluster]) {\n        latestAttrPositions[cluster] = {};\n      }\n\n      if (!latestAttrPositions[cluster][seriesType]) {\n        latestAttrPositions[cluster][seriesType] = {};\n      }\n\n      var prevD = latestAttrPositions[cluster][seriesType][d[baseAttr]]; // It is the first segment of a bar.\n\n      if (!prevD) {\n        var _latestAttrPositions$;\n\n        latestAttrPositions[cluster][seriesType][d[baseAttr]] = (_latestAttrPositions$ = {}, _defineProperty(_latestAttrPositions$, attr0, d[attr0]), _defineProperty(_latestAttrPositions$, attr, d[attr]), _latestAttrPositions$);\n        return _extends({}, d);\n      } // Calculate the position of the next segment in a bar.\n\n\n      var nextD = _extends({}, d, (_extends2 = {}, _defineProperty(_extends2, attr0, prevD[attr]), _defineProperty(_extends2, attr, prevD[attr] + d[attr] - (d[attr0] || 0)), _extends2));\n\n      latestAttrPositions[cluster][seriesType][d[baseAttr]] = (_latestAttrPositions$2 = {}, _defineProperty(_latestAttrPositions$2, attr0, nextD[attr0]), _defineProperty(_latestAttrPositions$2, attr, nextD[attr]), _latestAttrPositions$2);\n      return nextD;\n    }));\n    return accumulator;\n  }, []);\n}\n/**\n * Get the list of series props for a child.\n * @param {Array} children Array of all children.\n * @returns {Array} Array of series props for each child. If a child is not a\n * series, than it's undefined.\n */\n\nexport function getSeriesPropsFromChildren(children) {\n  var result = [];\n  var seriesTypesInfo = collectSeriesTypesInfo(children);\n  var seriesIndex = 0;\n  var _opacityValue = DEFAULT_OPACITY;\n  children.forEach(function (child) {\n    var props = void 0;\n\n    if (isSeriesChild(child)) {\n      var seriesTypeInfo = seriesTypesInfo[child.type.displayName];\n      var _colorValue = DISCRETE_COLOR_RANGE[seriesIndex % DISCRETE_COLOR_RANGE.length];\n      props = _extends({}, seriesTypeInfo, {\n        seriesIndex: seriesIndex,\n        _colorValue: _colorValue,\n        _opacityValue: _opacityValue\n      });\n      seriesTypeInfo.sameTypeIndex++;\n      seriesIndex++;\n\n      if (child.props.cluster) {\n        props.cluster = child.props.cluster; // Using Array.from() so we can use .indexOf\n\n        props.clusters = Array.from(seriesTypeInfo.clusters);\n        props.sameTypeTotal = props.clusters.length;\n        props.sameTypeIndex = props.clusters.indexOf(child.props.cluster);\n      }\n    }\n\n    result.push(props);\n  });\n  return result;\n}\n/**\n * Find the max radius value from the nodes to be rendered after they have been\n * transformed into an array\n * @param {Array} data - the tree data after it has been broken into a iterable\n * it is an array of objects!\n * @returns {number} the maximum value in coordinates for the radial variable\n */\n\nexport function getRadialDomain(data) {\n  return data.reduce(function (res, row) {\n    return Math.max(row.radius, res);\n  }, 0);\n}\nexport var ANIMATED_SERIES_PROPS = ['xRange', 'xDomain', 'x', 'yRange', 'yDomain', 'y', 'colorRange', 'colorDomain', 'color', 'opacityRange', 'opacityDomain', 'opacity', 'strokeRange', 'strokeDomain', 'stroke', 'fillRange', 'fillDomain', 'fill', 'width', 'height', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'data', 'angleDomain', 'angleRange', 'angle', 'radiusDomain', 'radiusRange', 'radius', 'innerRadiusDomain', 'innerRadiusRange', 'innerRadius'];\nexport function getStackParams(props) {\n  var _stackBy = props._stackBy,\n      valuePosAttr = props.valuePosAttr,\n      cluster = props.cluster;\n  var _props$sameTypeTotal = props.sameTypeTotal,\n      sameTypeTotal = _props$sameTypeTotal === undefined ? 1 : _props$sameTypeTotal,\n      _props$sameTypeIndex = props.sameTypeIndex,\n      sameTypeIndex = _props$sameTypeIndex === undefined ? 0 : _props$sameTypeIndex; // If bars are stacked, but not clustering, override `sameTypeTotal` and\n  // `sameTypeIndex` such that bars are stacked and not staggered.\n\n  if (_stackBy === valuePosAttr && !cluster) {\n    sameTypeTotal = 1;\n    sameTypeIndex = 0;\n  }\n\n  return {\n    sameTypeTotal: sameTypeTotal,\n    sameTypeIndex: sameTypeIndex\n  };\n}","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","React","AbstractSeries","DISCRETE_COLOR_RANGE","DEFAULT_OPACITY","isSeriesChild","child","type","getSeriesChildren","children","Children","toArray","filter","collectSeriesTypesInfo","result","forEach","displayName","cluster","props","sameTypeTotal","sameTypeIndex","clusters","Set","add","seriesHasAngleRadius","data","undefined","some","row","radius","angle","prepareData","map","x","Math","cos","y","sin","getStackedData","attr","areSomeSeriesStacked","series","stack","latestAttrPositions","reduce","accumulator","seriesIndex","push","seriesType","_series$props","_series$props$cluster","preppedData","attr0","baseAttr","d","dIndex","_extends2","_latestAttrPositions$2","prevD","_latestAttrPositions$","nextD","getSeriesPropsFromChildren","seriesTypesInfo","_opacityValue","seriesTypeInfo","_colorValue","Array","from","indexOf","getRadialDomain","res","max","ANIMATED_SERIES_PROPS","getStackParams","_stackBy","valuePosAttr","_props$sameTypeTotal","_props$sameTypeIndex"],"sources":["C:/Users/mnavas/CODE/SmartBIC/ache-multilingual/ache-dashboard/node_modules/react-vis/es/utils/series-utils.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\n\nimport AbstractSeries from '../plot/series/abstract-series';\nimport { DISCRETE_COLOR_RANGE, DEFAULT_OPACITY } from '../theme';\n\n/**\n * Check if the component is series or not.\n * @param {React.Component} child Component.\n * @returns {boolean} True if the child is series, false otherwise.\n */\nexport function isSeriesChild(child) {\n  var prototype = child.type.prototype;\n\n  return prototype instanceof AbstractSeries;\n}\n\n/**\n * Get all series from the 'children' object of the component.\n * @param {Object} children Children.\n * @returns {Array} Array of children.\n */\nexport function getSeriesChildren(children) {\n  return React.Children.toArray(children).filter(function (child) {\n    return child && isSeriesChild(child);\n  });\n}\n\n/**\n * Collect the map of repetitions of the series type for all children.\n * @param {Array} children Array of children.\n * @returns {{}} Map of repetitions where sameTypeTotal is the total amount and\n * sameTypeIndex is always 0.\n */\nfunction collectSeriesTypesInfo(children) {\n  var result = {};\n  children.filter(isSeriesChild).forEach(function (child) {\n    var displayName = child.type.displayName;\n    var cluster = child.props.cluster;\n\n    if (!result[displayName]) {\n      result[displayName] = {\n        sameTypeTotal: 0,\n        sameTypeIndex: 0,\n        clusters: new Set()\n      };\n    }\n    result[displayName].clusters.add(cluster);\n    result[displayName].sameTypeTotal++;\n  });\n  return result;\n}\n\n/**\n * Check series to see if it has angular data that needs to be converted\n * @param {Array} data - an array of objects to check\n * @returns {Boolean} whether or not this series contains polar configuration\n */\nfunction seriesHasAngleRadius() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  if (!data) {\n    return false;\n  }\n  return data.some(function (row) {\n    return row.radius && row.angle;\n  });\n}\n\n/**\n * Possibly convert polar coordinates to x/y for computing domain\n * @param {Array} data - an array of objects to check\n * @param {String} attr - the property being checked\n * @returns {Boolean} whether or not this series contains polar configuration\n */\nfunction prepareData(data) {\n  if (!seriesHasAngleRadius(data)) {\n    return data;\n  }\n\n  return data.map(function (row) {\n    return _extends({}, row, {\n      x: row.radius * Math.cos(row.angle),\n      y: row.radius * Math.sin(row.angle)\n    });\n  });\n}\n\n/**\n * Collect the stacked data for all children in use. If the children don't have\n * the data (e.g. the child is invalid series or something else), then the child\n * is skipped.\n * Each next value of attr is equal to the previous value plus the difference\n * between attr0 and attr.\n * @param {Array} children Array of children.\n * @param {string} attr Attribute to stack by.\n * @returns {Array} New array of children for the series.\n */\nexport function getStackedData(children, attr) {\n  var areSomeSeriesStacked = children.some(function (series) {\n    return series && series.props.stack;\n  });\n  // It stores the last segment position added to each bar, separated by cluster.\n  var latestAttrPositions = {};\n\n  return children.reduce(function (accumulator, series, seriesIndex) {\n    // Skip the children that are not series (e.g. don't have any data).\n    if (!series) {\n      accumulator.push(null);\n      return accumulator;\n    }\n    var seriesType = series.type.displayName;\n\n    var _series$props = series.props,\n        data = _series$props.data,\n        _series$props$cluster = _series$props.cluster,\n        cluster = _series$props$cluster === undefined ? 'default' : _series$props$cluster,\n        stack = _series$props.stack;\n\n    var preppedData = prepareData(data, attr);\n\n    if (!attr || !preppedData || !preppedData.length || areSomeSeriesStacked && !stack) {\n      accumulator.push(preppedData);\n      return accumulator;\n    }\n\n    var attr0 = attr + '0';\n    var baseAttr = attr === 'y' ? 'x' : 'y';\n\n    accumulator.push(preppedData.map(function (d, dIndex) {\n      var _extends2, _latestAttrPositions$2;\n\n      if (!latestAttrPositions[cluster]) {\n        latestAttrPositions[cluster] = {};\n      }\n      if (!latestAttrPositions[cluster][seriesType]) {\n        latestAttrPositions[cluster][seriesType] = {};\n      }\n\n      var prevD = latestAttrPositions[cluster][seriesType][d[baseAttr]];\n      // It is the first segment of a bar.\n      if (!prevD) {\n        var _latestAttrPositions$;\n\n        latestAttrPositions[cluster][seriesType][d[baseAttr]] = (_latestAttrPositions$ = {}, _defineProperty(_latestAttrPositions$, attr0, d[attr0]), _defineProperty(_latestAttrPositions$, attr, d[attr]), _latestAttrPositions$);\n\n        return _extends({}, d);\n      }\n\n      // Calculate the position of the next segment in a bar.\n      var nextD = _extends({}, d, (_extends2 = {}, _defineProperty(_extends2, attr0, prevD[attr]), _defineProperty(_extends2, attr, prevD[attr] + d[attr] - (d[attr0] || 0)), _extends2));\n\n      latestAttrPositions[cluster][seriesType][d[baseAttr]] = (_latestAttrPositions$2 = {}, _defineProperty(_latestAttrPositions$2, attr0, nextD[attr0]), _defineProperty(_latestAttrPositions$2, attr, nextD[attr]), _latestAttrPositions$2);\n\n      return nextD;\n    }));\n\n    return accumulator;\n  }, []);\n}\n\n/**\n * Get the list of series props for a child.\n * @param {Array} children Array of all children.\n * @returns {Array} Array of series props for each child. If a child is not a\n * series, than it's undefined.\n */\nexport function getSeriesPropsFromChildren(children) {\n  var result = [];\n  var seriesTypesInfo = collectSeriesTypesInfo(children);\n  var seriesIndex = 0;\n  var _opacityValue = DEFAULT_OPACITY;\n  children.forEach(function (child) {\n    var props = void 0;\n    if (isSeriesChild(child)) {\n      var seriesTypeInfo = seriesTypesInfo[child.type.displayName];\n      var _colorValue = DISCRETE_COLOR_RANGE[seriesIndex % DISCRETE_COLOR_RANGE.length];\n      props = _extends({}, seriesTypeInfo, {\n        seriesIndex: seriesIndex,\n        _colorValue: _colorValue,\n        _opacityValue: _opacityValue\n      });\n      seriesTypeInfo.sameTypeIndex++;\n      seriesIndex++;\n      if (child.props.cluster) {\n        props.cluster = child.props.cluster;\n        // Using Array.from() so we can use .indexOf\n        props.clusters = Array.from(seriesTypeInfo.clusters);\n        props.sameTypeTotal = props.clusters.length;\n        props.sameTypeIndex = props.clusters.indexOf(child.props.cluster);\n      }\n    }\n    result.push(props);\n  });\n  return result;\n}\n\n/**\n * Find the max radius value from the nodes to be rendered after they have been\n * transformed into an array\n * @param {Array} data - the tree data after it has been broken into a iterable\n * it is an array of objects!\n * @returns {number} the maximum value in coordinates for the radial variable\n */\nexport function getRadialDomain(data) {\n  return data.reduce(function (res, row) {\n    return Math.max(row.radius, res);\n  }, 0);\n}\n\nexport var ANIMATED_SERIES_PROPS = ['xRange', 'xDomain', 'x', 'yRange', 'yDomain', 'y', 'colorRange', 'colorDomain', 'color', 'opacityRange', 'opacityDomain', 'opacity', 'strokeRange', 'strokeDomain', 'stroke', 'fillRange', 'fillDomain', 'fill', 'width', 'height', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'data', 'angleDomain', 'angleRange', 'angle', 'radiusDomain', 'radiusRange', 'radius', 'innerRadiusDomain', 'innerRadiusRange', 'innerRadius'];\n\nexport function getStackParams(props) {\n  var _stackBy = props._stackBy,\n      valuePosAttr = props.valuePosAttr,\n      cluster = props.cluster;\n  var _props$sameTypeTotal = props.sameTypeTotal,\n      sameTypeTotal = _props$sameTypeTotal === undefined ? 1 : _props$sameTypeTotal,\n      _props$sameTypeIndex = props.sameTypeIndex,\n      sameTypeIndex = _props$sameTypeIndex === undefined ? 0 : _props$sameTypeIndex;\n\n  // If bars are stacked, but not clustering, override `sameTypeTotal` and\n  // `sameTypeIndex` such that bars are stacked and not staggered.\n\n  if (_stackBy === valuePosAttr && !cluster) {\n    sameTypeTotal = 1;\n    sameTypeIndex = 0;\n  }\n  return { sameTypeTotal: sameTypeTotal, sameTypeIndex: sameTypeIndex };\n}"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;IAA2B,KAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;MAAE,IAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;QAAEL,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;MAA4B;IAAE;EAAE;;EAAC,OAAOL,MAAP;AAAgB,CAAhQ;;AAEA,SAASS,eAAT,CAAyBC,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;EAAE,IAAIN,GAAG,IAAIK,GAAX,EAAgB;IAAEZ,MAAM,CAACc,cAAP,CAAsBF,GAAtB,EAA2BL,GAA3B,EAAgC;MAAEM,KAAK,EAAEA,KAAT;MAAgBE,UAAU,EAAE,IAA5B;MAAkCC,YAAY,EAAE,IAAhD;MAAsDC,QAAQ,EAAE;IAAhE,CAAhC;EAA0G,CAA5H,MAAkI;IAAEL,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;EAAmB;;EAAC,OAAOD,GAAP;AAAa,C,CAEjN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAOM,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,oBAAT,EAA+BC,eAA/B,QAAsD,UAAtD;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EACnC,IAAIf,SAAS,GAAGe,KAAK,CAACC,IAAN,CAAWhB,SAA3B;EAEA,OAAOA,SAAS,YAAYW,cAA5B;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,iBAAT,CAA2BC,QAA3B,EAAqC;EAC1C,OAAOR,KAAK,CAACS,QAAN,CAAeC,OAAf,CAAuBF,QAAvB,EAAiCG,MAAjC,CAAwC,UAAUN,KAAV,EAAiB;IAC9D,OAAOA,KAAK,IAAID,aAAa,CAACC,KAAD,CAA7B;EACD,CAFM,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,SAASO,sBAAT,CAAgCJ,QAAhC,EAA0C;EACxC,IAAIK,MAAM,GAAG,EAAb;EACAL,QAAQ,CAACG,MAAT,CAAgBP,aAAhB,EAA+BU,OAA/B,CAAuC,UAAUT,KAAV,EAAiB;IACtD,IAAIU,WAAW,GAAGV,KAAK,CAACC,IAAN,CAAWS,WAA7B;IACA,IAAIC,OAAO,GAAGX,KAAK,CAACY,KAAN,CAAYD,OAA1B;;IAEA,IAAI,CAACH,MAAM,CAACE,WAAD,CAAX,EAA0B;MACxBF,MAAM,CAACE,WAAD,CAAN,GAAsB;QACpBG,aAAa,EAAE,CADK;QAEpBC,aAAa,EAAE,CAFK;QAGpBC,QAAQ,EAAE,IAAIC,GAAJ;MAHU,CAAtB;IAKD;;IACDR,MAAM,CAACE,WAAD,CAAN,CAAoBK,QAApB,CAA6BE,GAA7B,CAAiCN,OAAjC;IACAH,MAAM,CAACE,WAAD,CAAN,CAAoBG,aAApB;EACD,CAbD;EAcA,OAAOL,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASU,oBAAT,GAAgC;EAC9B,IAAIC,IAAI,GAAGtC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBuC,SAAzC,GAAqDvC,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;;EAEA,IAAI,CAACsC,IAAL,EAAW;IACT,OAAO,KAAP;EACD;;EACD,OAAOA,IAAI,CAACE,IAAL,CAAU,UAAUC,GAAV,EAAe;IAC9B,OAAOA,GAAG,CAACC,MAAJ,IAAcD,GAAG,CAACE,KAAzB;EACD,CAFM,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,WAAT,CAAqBN,IAArB,EAA2B;EACzB,IAAI,CAACD,oBAAoB,CAACC,IAAD,CAAzB,EAAiC;IAC/B,OAAOA,IAAP;EACD;;EAED,OAAOA,IAAI,CAACO,GAAL,CAAS,UAAUJ,GAAV,EAAe;IAC7B,OAAO9C,QAAQ,CAAC,EAAD,EAAK8C,GAAL,EAAU;MACvBK,CAAC,EAAEL,GAAG,CAACC,MAAJ,GAAaK,IAAI,CAACC,GAAL,CAASP,GAAG,CAACE,KAAb,CADO;MAEvBM,CAAC,EAAER,GAAG,CAACC,MAAJ,GAAaK,IAAI,CAACG,GAAL,CAAST,GAAG,CAACE,KAAb;IAFO,CAAV,CAAf;EAID,CALM,CAAP;AAMD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASQ,cAAT,CAAwB7B,QAAxB,EAAkC8B,IAAlC,EAAwC;EAC7C,IAAIC,oBAAoB,GAAG/B,QAAQ,CAACkB,IAAT,CAAc,UAAUc,MAAV,EAAkB;IACzD,OAAOA,MAAM,IAAIA,MAAM,CAACvB,KAAP,CAAawB,KAA9B;EACD,CAF0B,CAA3B,CAD6C,CAI7C;;EACA,IAAIC,mBAAmB,GAAG,EAA1B;EAEA,OAAOlC,QAAQ,CAACmC,MAAT,CAAgB,UAAUC,WAAV,EAAuBJ,MAAvB,EAA+BK,WAA/B,EAA4C;IACjE;IACA,IAAI,CAACL,MAAL,EAAa;MACXI,WAAW,CAACE,IAAZ,CAAiB,IAAjB;MACA,OAAOF,WAAP;IACD;;IACD,IAAIG,UAAU,GAAGP,MAAM,CAAClC,IAAP,CAAYS,WAA7B;IAEA,IAAIiC,aAAa,GAAGR,MAAM,CAACvB,KAA3B;IAAA,IACIO,IAAI,GAAGwB,aAAa,CAACxB,IADzB;IAAA,IAEIyB,qBAAqB,GAAGD,aAAa,CAAChC,OAF1C;IAAA,IAGIA,OAAO,GAAGiC,qBAAqB,KAAKxB,SAA1B,GAAsC,SAAtC,GAAkDwB,qBAHhE;IAAA,IAIIR,KAAK,GAAGO,aAAa,CAACP,KAJ1B;IAMA,IAAIS,WAAW,GAAGpB,WAAW,CAACN,IAAD,EAAOc,IAAP,CAA7B;;IAEA,IAAI,CAACA,IAAD,IAAS,CAACY,WAAV,IAAyB,CAACA,WAAW,CAAC/D,MAAtC,IAAgDoD,oBAAoB,IAAI,CAACE,KAA7E,EAAoF;MAClFG,WAAW,CAACE,IAAZ,CAAiBI,WAAjB;MACA,OAAON,WAAP;IACD;;IAED,IAAIO,KAAK,GAAGb,IAAI,GAAG,GAAnB;IACA,IAAIc,QAAQ,GAAGd,IAAI,KAAK,GAAT,GAAe,GAAf,GAAqB,GAApC;IAEAM,WAAW,CAACE,IAAZ,CAAiBI,WAAW,CAACnB,GAAZ,CAAgB,UAAUsB,CAAV,EAAaC,MAAb,EAAqB;MACpD,IAAIC,SAAJ,EAAeC,sBAAf;;MAEA,IAAI,CAACd,mBAAmB,CAAC1B,OAAD,CAAxB,EAAmC;QACjC0B,mBAAmB,CAAC1B,OAAD,CAAnB,GAA+B,EAA/B;MACD;;MACD,IAAI,CAAC0B,mBAAmB,CAAC1B,OAAD,CAAnB,CAA6B+B,UAA7B,CAAL,EAA+C;QAC7CL,mBAAmB,CAAC1B,OAAD,CAAnB,CAA6B+B,UAA7B,IAA2C,EAA3C;MACD;;MAED,IAAIU,KAAK,GAAGf,mBAAmB,CAAC1B,OAAD,CAAnB,CAA6B+B,UAA7B,EAAyCM,CAAC,CAACD,QAAD,CAA1C,CAAZ,CAVoD,CAWpD;;MACA,IAAI,CAACK,KAAL,EAAY;QACV,IAAIC,qBAAJ;;QAEAhB,mBAAmB,CAAC1B,OAAD,CAAnB,CAA6B+B,UAA7B,EAAyCM,CAAC,CAACD,QAAD,CAA1C,KAAyDM,qBAAqB,GAAG,EAAxB,EAA4BjE,eAAe,CAACiE,qBAAD,EAAwBP,KAAxB,EAA+BE,CAAC,CAACF,KAAD,CAAhC,CAA3C,EAAqF1D,eAAe,CAACiE,qBAAD,EAAwBpB,IAAxB,EAA8Be,CAAC,CAACf,IAAD,CAA/B,CAApG,EAA4IoB,qBAArM;QAEA,OAAO7E,QAAQ,CAAC,EAAD,EAAKwE,CAAL,CAAf;MACD,CAlBmD,CAoBpD;;;MACA,IAAIM,KAAK,GAAG9E,QAAQ,CAAC,EAAD,EAAKwE,CAAL,GAASE,SAAS,GAAG,EAAZ,EAAgB9D,eAAe,CAAC8D,SAAD,EAAYJ,KAAZ,EAAmBM,KAAK,CAACnB,IAAD,CAAxB,CAA/B,EAAgE7C,eAAe,CAAC8D,SAAD,EAAYjB,IAAZ,EAAkBmB,KAAK,CAACnB,IAAD,CAAL,GAAce,CAAC,CAACf,IAAD,CAAf,IAAyBe,CAAC,CAACF,KAAD,CAAD,IAAY,CAArC,CAAlB,CAA/E,EAA2II,SAApJ,EAApB;;MAEAb,mBAAmB,CAAC1B,OAAD,CAAnB,CAA6B+B,UAA7B,EAAyCM,CAAC,CAACD,QAAD,CAA1C,KAAyDI,sBAAsB,GAAG,EAAzB,EAA6B/D,eAAe,CAAC+D,sBAAD,EAAyBL,KAAzB,EAAgCQ,KAAK,CAACR,KAAD,CAArC,CAA5C,EAA2F1D,eAAe,CAAC+D,sBAAD,EAAyBlB,IAAzB,EAA+BqB,KAAK,CAACrB,IAAD,CAApC,CAA1G,EAAuJkB,sBAAhN;MAEA,OAAOG,KAAP;IACD,CA1BgB,CAAjB;IA4BA,OAAOf,WAAP;EACD,CArDM,EAqDJ,EArDI,CAAP;AAsDD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASgB,0BAAT,CAAoCpD,QAApC,EAA8C;EACnD,IAAIK,MAAM,GAAG,EAAb;EACA,IAAIgD,eAAe,GAAGjD,sBAAsB,CAACJ,QAAD,CAA5C;EACA,IAAIqC,WAAW,GAAG,CAAlB;EACA,IAAIiB,aAAa,GAAG3D,eAApB;EACAK,QAAQ,CAACM,OAAT,CAAiB,UAAUT,KAAV,EAAiB;IAChC,IAAIY,KAAK,GAAG,KAAK,CAAjB;;IACA,IAAIb,aAAa,CAACC,KAAD,CAAjB,EAA0B;MACxB,IAAI0D,cAAc,GAAGF,eAAe,CAACxD,KAAK,CAACC,IAAN,CAAWS,WAAZ,CAApC;MACA,IAAIiD,WAAW,GAAG9D,oBAAoB,CAAC2C,WAAW,GAAG3C,oBAAoB,CAACf,MAApC,CAAtC;MACA8B,KAAK,GAAGpC,QAAQ,CAAC,EAAD,EAAKkF,cAAL,EAAqB;QACnClB,WAAW,EAAEA,WADsB;QAEnCmB,WAAW,EAAEA,WAFsB;QAGnCF,aAAa,EAAEA;MAHoB,CAArB,CAAhB;MAKAC,cAAc,CAAC5C,aAAf;MACA0B,WAAW;;MACX,IAAIxC,KAAK,CAACY,KAAN,CAAYD,OAAhB,EAAyB;QACvBC,KAAK,CAACD,OAAN,GAAgBX,KAAK,CAACY,KAAN,CAAYD,OAA5B,CADuB,CAEvB;;QACAC,KAAK,CAACG,QAAN,GAAiB6C,KAAK,CAACC,IAAN,CAAWH,cAAc,CAAC3C,QAA1B,CAAjB;QACAH,KAAK,CAACC,aAAN,GAAsBD,KAAK,CAACG,QAAN,CAAejC,MAArC;QACA8B,KAAK,CAACE,aAAN,GAAsBF,KAAK,CAACG,QAAN,CAAe+C,OAAf,CAAuB9D,KAAK,CAACY,KAAN,CAAYD,OAAnC,CAAtB;MACD;IACF;;IACDH,MAAM,CAACiC,IAAP,CAAY7B,KAAZ;EACD,CArBD;EAsBA,OAAOJ,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASuD,eAAT,CAAyB5C,IAAzB,EAA+B;EACpC,OAAOA,IAAI,CAACmB,MAAL,CAAY,UAAU0B,GAAV,EAAe1C,GAAf,EAAoB;IACrC,OAAOM,IAAI,CAACqC,GAAL,CAAS3C,GAAG,CAACC,MAAb,EAAqByC,GAArB,CAAP;EACD,CAFM,EAEJ,CAFI,CAAP;AAGD;AAED,OAAO,IAAIE,qBAAqB,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,GAAtB,EAA2B,QAA3B,EAAqC,SAArC,EAAgD,GAAhD,EAAqD,YAArD,EAAmE,aAAnE,EAAkF,OAAlF,EAA2F,cAA3F,EAA2G,eAA3G,EAA4H,SAA5H,EAAuI,aAAvI,EAAsJ,cAAtJ,EAAsK,QAAtK,EAAgL,WAAhL,EAA6L,YAA7L,EAA2M,MAA3M,EAAmN,OAAnN,EAA4N,QAA5N,EAAsO,YAAtO,EAAoP,WAApP,EAAiQ,aAAjQ,EAAgR,cAAhR,EAAgS,MAAhS,EAAwS,aAAxS,EAAuT,YAAvT,EAAqU,OAArU,EAA8U,cAA9U,EAA8V,aAA9V,EAA6W,QAA7W,EAAuX,mBAAvX,EAA4Y,kBAA5Y,EAAga,aAAha,CAA5B;AAEP,OAAO,SAASC,cAAT,CAAwBvD,KAAxB,EAA+B;EACpC,IAAIwD,QAAQ,GAAGxD,KAAK,CAACwD,QAArB;EAAA,IACIC,YAAY,GAAGzD,KAAK,CAACyD,YADzB;EAAA,IAEI1D,OAAO,GAAGC,KAAK,CAACD,OAFpB;EAGA,IAAI2D,oBAAoB,GAAG1D,KAAK,CAACC,aAAjC;EAAA,IACIA,aAAa,GAAGyD,oBAAoB,KAAKlD,SAAzB,GAAqC,CAArC,GAAyCkD,oBAD7D;EAAA,IAEIC,oBAAoB,GAAG3D,KAAK,CAACE,aAFjC;EAAA,IAGIA,aAAa,GAAGyD,oBAAoB,KAAKnD,SAAzB,GAAqC,CAArC,GAAyCmD,oBAH7D,CAJoC,CASpC;EACA;;EAEA,IAAIH,QAAQ,KAAKC,YAAb,IAA6B,CAAC1D,OAAlC,EAA2C;IACzCE,aAAa,GAAG,CAAhB;IACAC,aAAa,GAAG,CAAhB;EACD;;EACD,OAAO;IAAED,aAAa,EAAEA,aAAjB;IAAgCC,aAAa,EAAEA;EAA/C,CAAP;AACD"},"metadata":{},"sourceType":"module"}