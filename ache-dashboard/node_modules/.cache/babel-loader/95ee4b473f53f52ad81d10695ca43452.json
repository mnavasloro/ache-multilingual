{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar defaults = require('lodash/defaults');\n\nvar size = require('lodash/size');\n\nvar map = require('lodash/map');\n\nvar FilterItem =\n/** @class */\nfunction (_super) {\n  __extends(FilterItem, _super);\n\n  function FilterItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FilterItem.prototype.render = function () {\n    var props = this.props;\n    return React.createElement(\"div\", {\n      className: props.bemBlocks.option().mix(props.bemBlocks.container('item')).mix(\"selected-filter--\" + props.filterId)\n    }, React.createElement(\"div\", {\n      className: props.bemBlocks.option('name')\n    }, props.labelKey, \": \", props.labelValue), React.createElement(core_1.FastClick, {\n      handler: props.removeFilter\n    }, React.createElement(\"div\", {\n      className: props.bemBlocks.option('remove-action')\n    }, \"x\")));\n  };\n\n  return FilterItem;\n}(React.PureComponent);\n\nexports.FilterItem = FilterItem;\n\nvar SelectedFilters =\n/** @class */\nfunction (_super) {\n  __extends(SelectedFilters, _super);\n\n  function SelectedFilters(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.translate = _this.translate.bind(_this);\n    return _this;\n  }\n\n  SelectedFilters.prototype.defineBEMBlocks = function () {\n    var blockName = this.props.mod || 'sk-selected-filters';\n    return {\n      container: blockName,\n      option: blockName + \"-option\"\n    };\n  };\n\n  SelectedFilters.prototype.getFilters = function () {\n    return this.getQuery().getSelectedFilters();\n  };\n\n  SelectedFilters.prototype.hasFilters = function () {\n    return size(this.getFilters()) > 0;\n  };\n\n  SelectedFilters.prototype.renderFilter = function (filter) {\n    return core_1.renderComponent(this.props.itemComponent, {\n      key: filter.name + '$$' + filter.value,\n      bemBlocks: this.bemBlocks,\n      filterId: filter.id,\n      labelKey: this.translate(filter.name),\n      labelValue: this.translate(filter.value),\n      removeFilter: this.removeFilter.bind(this, filter),\n      translate: this.translate\n    });\n  };\n\n  SelectedFilters.prototype.removeFilter = function (filter) {\n    filter.remove();\n    this.searchkit.performSearch();\n  };\n\n  SelectedFilters.prototype.render = function () {\n    if (!this.hasFilters()) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: this.bemBlocks.container()\n    }, map(this.getFilters(), this.renderFilter.bind(this)));\n  };\n\n  SelectedFilters.propTypes = defaults({}, core_1.SearchkitComponent.propTypes);\n  SelectedFilters.defaultProps = {\n    itemComponent: FilterItem\n  };\n  return SelectedFilters;\n}(core_1.SearchkitComponent);\n\nexports.SelectedFilters = SelectedFilters;","map":{"version":3,"mappings":"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","names":["defaults","require","size","map","__extends","FilterItem","props","React","className","bemBlocks","option","mix","container","filterId","labelKey","labelValue","core_1","handler","removeFilter","PureComponent","exports","_super","_this","translate","bind","SelectedFilters","blockName","mod","getQuery","getSelectedFilters","getFilters","filter","itemComponent","key","name","value","id","remove","searchkit","performSearch","hasFilters","renderFilter","propTypes"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\search\\filters\\selected-filters\\SelectedFilters.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport {\n  SearchkitComponent,\n  FastClick,\n  SearchkitComponentProps,\n  RenderComponentType,\n  renderComponent\n} from '../../../../core'\n\nconst defaults = require('lodash/defaults')\nconst size = require('lodash/size')\nconst map = require('lodash/map')\n\nexport class FilterItem extends React.PureComponent<FilterItemProps, any> {\n  render() {\n    const props = this.props\n    return (\n      <div\n        className={props.bemBlocks\n          .option()\n          .mix(props.bemBlocks.container('item'))\n          .mix(`selected-filter--${props.filterId}`)}\n      >\n        <div className={props.bemBlocks.option('name')}>\n          {props.labelKey}: {props.labelValue}\n        </div>\n        <FastClick handler={props.removeFilter}>\n          <div className={props.bemBlocks.option('remove-action')}>x</div>\n        </FastClick>\n      </div>\n    )\n  }\n}\n\nexport interface FilterItemProps {\n  key: string\n  bemBlocks?: any\n  filterId: string\n  labelKey: string\n  labelValue: string\n  removeFilter: Function\n  translate: Function\n}\n\nexport interface SelectedFiltersProps extends SearchkitComponentProps {\n  itemComponent?: RenderComponentType<FilterItemProps>\n}\n\nexport class SelectedFilters extends SearchkitComponent<SelectedFiltersProps, any> {\n  static propTypes = defaults({}, SearchkitComponent.propTypes)\n\n  static defaultProps = {\n    itemComponent: FilterItem\n  }\n\n  constructor(props) {\n    super(props)\n    this.translate = this.translate.bind(this)\n  }\n\n  defineBEMBlocks() {\n    const blockName = this.props.mod || 'sk-selected-filters'\n    return {\n      container: blockName,\n      option: `${blockName}-option`\n    }\n  }\n\n  getFilters(): Array<any> {\n    return this.getQuery().getSelectedFilters()\n  }\n\n  hasFilters(): boolean {\n    return size(this.getFilters()) > 0\n  }\n\n  renderFilter(filter) {\n    return renderComponent(this.props.itemComponent, {\n      key: filter.name + '$$' + filter.value,\n      bemBlocks: this.bemBlocks,\n      filterId: filter.id,\n      labelKey: this.translate(filter.name),\n      labelValue: this.translate(filter.value),\n      removeFilter: this.removeFilter.bind(this, filter),\n      translate: this.translate\n    })\n  }\n\n  removeFilter(filter) {\n    filter.remove()\n    this.searchkit.performSearch()\n  }\n\n  render() {\n    if (!this.hasFilters()) {\n      return null\n    }\n    return (\n      <div className={this.bemBlocks.container()}>\n        {map(this.getFilters(), this.renderFilter.bind(this))}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}