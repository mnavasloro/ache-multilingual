{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"../../../core/react\");\n\nvar maxBy = require('lodash/maxBy');\n\nvar map = require('lodash/map');\n\nfunction computeMaxValue(items, field) {\n  if (!items || items.length == 0) return 0;\n  return maxBy(items, field)[field];\n}\n\nvar RangeHistogram =\n/** @class */\nfunction (_super) {\n  __extends(RangeHistogram, _super);\n\n  function RangeHistogram() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RangeHistogram.prototype.render = function () {\n    var _a = this.props,\n        mod = _a.mod,\n        className = _a.className,\n        minValue = _a.minValue,\n        maxValue = _a.maxValue,\n        _b = _a.items,\n        items = _b === void 0 ? [] : _b;\n    var bemBlocks = {\n      container: react_1.block(mod).el\n    };\n    var maxCount = computeMaxValue(items, 'doc_count');\n    if (maxCount == 0) return null;\n    var bars = map(items, function (_a) {\n      var key = _a.key,\n          doc_count = _a.doc_count;\n      var outOfBounds = key < minValue || key > maxValue;\n      return React.createElement(\"div\", {\n        className: bemBlocks.container('bar').state({\n          'out-of-bounds': outOfBounds\n        }),\n        key: key,\n        style: {\n          height: doc_count / maxCount * 100 + \"%\"\n        }\n      });\n    });\n    return React.createElement(\"div\", {\n      className: bemBlocks.container().mix(className)\n    }, bars);\n  };\n\n  RangeHistogram.defaultProps = {\n    mod: 'sk-range-histogram'\n  };\n  return RangeHistogram;\n}(React.PureComponent);\n\nexports.RangeHistogram = RangeHistogram;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,YAAD,CAAnB;;AAEA,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAqC;EACnC,IAAI,CAACD,KAAD,IAAUA,KAAK,CAACE,MAAN,IAAgB,CAA9B,EAAiC,OAAO,CAAP;EACjC,OAAON,KAAK,CAACI,KAAD,EAAQC,KAAR,CAAL,CAAoBA,KAApB,CAAP;AACD;;AAED;AAAA;AAAA;EAAoCE;;EAApC;;EA8BC;;EAzBCC;IACQ;IAAA,IAAEC,YAAF;IAAA,IAAOC,wBAAP;IAAA,IAAkBC,sBAAlB;IAAA,IAA4BC,sBAA5B;IAAA,IAAsCC,aAAtC;IAAA,IAAsCT,+BAAtC;IAEN,IAAMU,SAAS,GAAG;MAChBC,SAAS,EAAEC,cAAMP,GAAN,EAAWQ;IADN,CAAlB;IAIA,IAAMC,QAAQ,GAAGf,eAAe,CAACC,KAAD,EAAQ,WAAR,CAAhC;IACA,IAAIc,QAAQ,IAAI,CAAhB,EAAmB,OAAO,IAAP;IAEnB,IAAMC,IAAI,GAAGjB,GAAG,CAACE,KAAD,EAAQ,UAACgB,EAAD,EAAmB;UAAhBC;UAAKC;MAC9B,IAAMC,WAAW,GAAGF,GAAG,GAAGV,QAAN,IAAkBU,GAAG,GAAGT,QAA5C;MACA,OACEY;QACEd,SAAS,EAAEI,SAAS,CAACC,SAAV,CAAoB,KAApB,EAA2BU,KAA3B,CAAiC;UAAE,iBAAiBF;QAAnB,CAAjC,CADb;QAEEF,GAAG,EAAEA,GAFP;QAGEK,KAAK,EAAE;UACLC,MAAM,EAAML,SAAS,GAAGJ,QAAb,GAAyB,GAAzB,GAA4B;QADlC;MAHT,EADF;IASD,CAXe,CAAhB;IAaA,OAAOM;MAAKd,SAAS,EAAEI,SAAS,CAACC,SAAV,GAAsBa,GAAtB,CAA0BlB,SAA1B;IAAhB,GAAuDS,IAAvD,CAAP;EACD,CAxBD;;EAJOX,8BAAe;IACpBC,GAAG,EAAE;EADe,CAAf;EA6BT;AAAC,CA9BD,CAAoCe,KAAK,CAACK,aAA1C;;AAAaC","names":["maxBy","require","map","computeMaxValue","items","field","length","__extends","RangeHistogram","mod","className","minValue","maxValue","_b","bemBlocks","container","react_1","el","maxCount","bars","_a","key","doc_count","outOfBounds","React","state","style","height","mix","PureComponent","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\ui\\range\\RangeHistogram.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { block } from '../../../core/react'\n\nconst maxBy = require('lodash/maxBy')\nconst map = require('lodash/map')\n\nfunction computeMaxValue(items, field) {\n  if (!items || items.length == 0) return 0\n  return maxBy(items, field)[field]\n}\n\nexport class RangeHistogram extends React.PureComponent<any, {}> {\n  static defaultProps = {\n    mod: 'sk-range-histogram'\n  }\n\n  render() {\n    const { mod, className, minValue, maxValue, items = [] } = this.props\n\n    const bemBlocks = {\n      container: block(mod).el\n    }\n\n    const maxCount = computeMaxValue(items, 'doc_count')\n    if (maxCount == 0) return null\n\n    const bars = map(items, ({ key, doc_count }) => {\n      const outOfBounds = key < minValue || key > maxValue\n      return (\n        <div\n          className={bemBlocks.container('bar').state({ 'out-of-bounds': outOfBounds })}\n          key={key}\n          style={{\n            height: `${(doc_count / maxCount) * 100}%`\n          }}\n        ></div>\n      )\n    })\n\n    return <div className={bemBlocks.container().mix(className)}>{bars}</div>\n  }\n}\n"]},"metadata":{},"sourceType":"script"}