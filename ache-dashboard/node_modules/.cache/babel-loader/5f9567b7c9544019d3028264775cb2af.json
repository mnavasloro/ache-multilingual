{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar core_1 = require(\"../../../core\");\n\nvar Panel =\n/** @class */\nfunction (_super) {\n  __extends(Panel, _super);\n\n  function Panel(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      collapsed: props.defaultCollapsed\n    };\n    return _this;\n  }\n\n  Panel.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    if (nextProps.defaultCollapsed != this.props.defaultCollapsed) {\n      this.setState({\n        collapsed: nextProps.defaultCollapsed\n      });\n    }\n  };\n\n  Panel.prototype.toggleCollapsed = function () {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  Panel.prototype.render = function () {\n    var _a = this.props,\n        title = _a.title,\n        mod = _a.mod,\n        className = _a.className,\n        disabled = _a.disabled,\n        children = _a.children,\n        collapsable = _a.collapsable;\n    var collapsed = collapsable && this.state.collapsed;\n    var containerBlock = core_1.block(mod).state({\n      disabled: disabled\n    });\n    var titleDiv;\n\n    if (collapsable) {\n      titleDiv = React.createElement(\"div\", {\n        className: containerBlock.el('header').state({\n          collapsable: collapsable,\n          collapsed: collapsed\n        }),\n        onClick: this.toggleCollapsed.bind(this)\n      }, title);\n    } else {\n      titleDiv = React.createElement(\"div\", {\n        className: containerBlock.el('header')\n      }, title);\n    }\n\n    return React.createElement(\"div\", {\n      className: containerBlock.mix(className)\n    }, titleDiv, React.createElement(\"div\", {\n      className: containerBlock.el('content').state({\n        collapsed: collapsed\n      })\n    }, children));\n  };\n\n  Panel.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    mod: PropTypes.string,\n    className: PropTypes.string,\n    collapsable: PropTypes.bool,\n    defaultCollapsed: PropTypes.bool\n  };\n  Panel.defaultProps = {\n    disabled: false,\n    collapsable: false,\n    defaultCollapsed: true,\n    mod: 'sk-panel'\n  };\n  return Panel;\n}(React.PureComponent);\n\nexports.Panel = Panel;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAWA;AAAA;AAAA;EAA2BA;;EAiBzB,eAAYC,KAAZ,EAAiB;IAAjB,YACEC,kBAAMD,KAAN,KAAY,IADd;;IAEEE,KAAI,CAACC,KAAL,GAAa;MACXC,SAAS,EAAEJ,KAAK,CAACK;IADN,CAAb;;EAGD;;EAEDC,6DAAiCC,SAAjC,EAA0C;IACxC,IAAIA,SAAS,CAACF,gBAAV,IAA8B,KAAKL,KAAL,CAAWK,gBAA7C,EAA+D;MAC7D,KAAKG,QAAL,CAAc;QACZJ,SAAS,EAAEG,SAAS,CAACF;MADT,CAAd;IAGD;EACF,CAND;;EAQAC;IACE,KAAKE,QAAL,CAAc;MACZJ,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;IADX,CAAd;EAGD,CAJD;;EAMAE;IACQ;IAAA,IAAEG,gBAAF;IAAA,IAASC,YAAT;IAAA,IAAcC,wBAAd;IAAA,IAAyBC,sBAAzB;IAAA,IAAmCC,sBAAnC;IAAA,IAA6CC,4BAA7C;IACN,IAAMV,SAAS,GAAGU,WAAW,IAAI,KAAKX,KAAL,CAAWC,SAA5C;IACA,IAAMW,cAAc,GAAGC,aAAMN,GAAN,EAAWP,KAAX,CAAiB;MAAES,QAAQ;IAAV,CAAjB,CAAvB;IAEA,IAAIK,QAAJ;;IACA,IAAIH,WAAJ,EAAiB;MACfG,QAAQ,GACNC;QACEP,SAAS,EAAEI,cAAc,CAACI,EAAf,CAAkB,QAAlB,EAA4BhB,KAA5B,CAAkC;UAAEW,WAAW,aAAb;UAAeV,SAAS;QAAxB,CAAlC,CADb;QAEEgB,OAAO,EAAE,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B;MAFX,GAIGb,KAJH,CADF;IAQD,CATD,MASO;MACLQ,QAAQ,GAAGC;QAAKP,SAAS,EAAEI,cAAc,CAACI,EAAf,CAAkB,QAAlB;MAAhB,GAA8CV,KAA9C,CAAX;IACD;;IAED,OACES;MAAKP,SAAS,EAAEI,cAAc,CAACQ,GAAf,CAAmBZ,SAAnB;IAAhB,GACGM,QADH,EAEEC;MAAKP,SAAS,EAAEI,cAAc,CAACI,EAAf,CAAkB,SAAlB,EAA6BhB,KAA7B,CAAmC;QAAEC,SAAS;MAAX,CAAnC;IAAhB,GAAoES,QAApE,CAFF,CADF;EAMD,CAzBD;;EArCOP,kBAAY;IACjBG,KAAK,EAAEe,SAAS,CAACC,MADA;IAEjBb,QAAQ,EAAEY,SAAS,CAACE,IAFH;IAGjBhB,GAAG,EAAEc,SAAS,CAACC,MAHE;IAIjBd,SAAS,EAAEa,SAAS,CAACC,MAJJ;IAKjBX,WAAW,EAAEU,SAAS,CAACE,IALN;IAMjBrB,gBAAgB,EAAEmB,SAAS,CAACE;EANX,CAAZ;EASApB,qBAAe;IACpBM,QAAQ,EAAE,KADU;IAEpBE,WAAW,EAAE,KAFO;IAGpBT,gBAAgB,EAAE,IAHE;IAIpBK,GAAG,EAAE;EAJe,CAAf;EAsDT;AAAC,CAhED,CAA2BQ,KAAK,CAACS,aAAjC;;AAAaC","names":["__extends","props","_super","_this","state","collapsed","defaultCollapsed","Panel","nextProps","setState","title","mod","className","disabled","children","collapsable","containerBlock","core_1","titleDiv","React","el","onClick","toggleCollapsed","bind","mix","PropTypes","string","bool","PureComponent","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\ui\\layout\\Panel.tsx"],"sourcesContent":["import * as React from 'react'\nimport * as PropTypes from 'prop-types'\nimport { block } from '../../../core'\nexport interface PanelProps extends React.Props<Panel> {\n  key?: any\n  title?: string\n  mod?: string\n  disabled?: boolean\n  className?: string\n  collapsable?: boolean\n  defaultCollapsed?: boolean\n}\n\nexport class Panel extends React.PureComponent<PanelProps, { collapsed: boolean }> {\n  static propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    mod: PropTypes.string,\n    className: PropTypes.string,\n    collapsable: PropTypes.bool,\n    defaultCollapsed: PropTypes.bool\n  }\n\n  static defaultProps = {\n    disabled: false,\n    collapsable: false,\n    defaultCollapsed: true,\n    mod: 'sk-panel'\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      collapsed: props.defaultCollapsed\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.defaultCollapsed != this.props.defaultCollapsed) {\n      this.setState({\n        collapsed: nextProps.defaultCollapsed\n      })\n    }\n  }\n\n  toggleCollapsed() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    })\n  }\n\n  render() {\n    const { title, mod, className, disabled, children, collapsable } = this.props\n    const collapsed = collapsable && this.state.collapsed\n    const containerBlock = block(mod).state({ disabled })\n\n    let titleDiv\n    if (collapsable) {\n      titleDiv = (\n        <div\n          className={containerBlock.el('header').state({ collapsable, collapsed })}\n          onClick={this.toggleCollapsed.bind(this)}\n        >\n          {title}\n        </div>\n      )\n    } else {\n      titleDiv = <div className={containerBlock.el('header')}>{title}</div>\n    }\n\n    return (\n      <div className={containerBlock.mix(className)}>\n        {titleDiv}\n        <div className={containerBlock.el('content').state({ collapsed })}>{children}</div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}