{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar react_1 = require(\"../../../../core/react\");\n\nvar ui_1 = require(\"../../../ui\");\n\nvar FacetFilterProps_1 = require(\"./FacetFilterProps\");\n\nvar identity = require('lodash/identity');\n\nvar FacetFilter =\n/** @class */\nfunction (_super) {\n  __extends(FacetFilter, _super);\n\n  function FacetFilter(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.toggleViewMoreOption = _this.toggleViewMoreOption.bind(_this);\n    return _this;\n  }\n\n  FacetFilter.prototype.getAccessorOptions = function () {\n    var _a = this.props,\n        field = _a.field,\n        id = _a.id,\n        operator = _a.operator,\n        title = _a.title,\n        include = _a.include,\n        exclude = _a.exclude,\n        size = _a.size,\n        translations = _a.translations,\n        orderKey = _a.orderKey,\n        orderDirection = _a.orderDirection,\n        fieldOptions = _a.fieldOptions;\n    return {\n      id: id,\n      operator: operator,\n      title: title,\n      size: size,\n      include: include,\n      exclude: exclude,\n      field: field,\n      translations: translations,\n      orderKey: orderKey,\n      orderDirection: orderDirection,\n      fieldOptions: fieldOptions\n    };\n  };\n\n  FacetFilter.prototype.defineAccessor = function () {\n    return new core_1.FacetAccessor(this.props.id, this.getAccessorOptions());\n  };\n\n  FacetFilter.prototype.defineBEMBlocks = function () {\n    var blockName = this.props.mod || 'sk-refinement-list';\n    return {\n      container: blockName,\n      option: blockName + \"-option\"\n    };\n  };\n\n  FacetFilter.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.operator != this.props.operator) {\n      this.accessor.options.operator = this.props.operator;\n      this.searchkit.performSearch();\n    }\n  };\n\n  FacetFilter.prototype.toggleFilter = function (key) {\n    this.accessor.state = this.accessor.state.toggle(key);\n    this.searchkit.performSearch();\n  };\n\n  FacetFilter.prototype.setFilters = function (keys) {\n    this.accessor.state = this.accessor.state.setValue(keys);\n    this.searchkit.performSearch();\n  };\n\n  FacetFilter.prototype.toggleViewMoreOption = function (option) {\n    this.accessor.setViewMoreOption(option);\n    this.searchkit.performSearch();\n  };\n\n  FacetFilter.prototype.hasOptions = function () {\n    return this.accessor.getBuckets().length != 0;\n  };\n\n  FacetFilter.prototype.getSelectedItems = function () {\n    return this.accessor.state.getValue();\n  };\n\n  FacetFilter.prototype.getItems = function () {\n    return this.props.bucketsTransform(this.accessor.getBuckets());\n  };\n\n  FacetFilter.prototype.render = function () {\n    if (!this.accessor) return null;\n    var _a = this.props,\n        listComponent = _a.listComponent,\n        containerComponent = _a.containerComponent,\n        showCount = _a.showCount,\n        title = _a.title,\n        id = _a.id,\n        countFormatter = _a.countFormatter;\n    return react_1.renderComponent(containerComponent, {\n      title: title,\n      className: id ? \"filter--\" + id : undefined,\n      disabled: !this.hasOptions()\n    }, [react_1.renderComponent(listComponent, {\n      key: 'listComponent',\n      items: this.getItems(),\n      itemComponent: this.props.itemComponent,\n      selectedItems: this.getSelectedItems(),\n      toggleItem: this.toggleFilter.bind(this),\n      setItems: this.setFilters.bind(this),\n      docCount: this.accessor.getDocCount(),\n      showCount: showCount,\n      translate: this.translate,\n      countFormatter: countFormatter\n    }), this.renderShowMore()]);\n  };\n\n  FacetFilter.prototype.renderShowMore = function () {\n    var _this = this;\n\n    var option = this.accessor.getMoreSizeOption();\n\n    if (!option || !this.props.showMore) {\n      return null;\n    }\n\n    return React.createElement(react_1.FastClick, {\n      handler: function handler() {\n        return _this.toggleViewMoreOption(option);\n      },\n      key: \"showMore\"\n    }, React.createElement(\"div\", {\n      \"data-qa\": \"show-more\",\n      className: this.bemBlocks.container('view-more-action')\n    }, this.translate(option.label)));\n  };\n\n  FacetFilter.propTypes = FacetFilterProps_1.FacetFilterPropTypes;\n  FacetFilter.defaultProps = {\n    listComponent: ui_1.CheckboxItemList,\n    containerComponent: ui_1.Panel,\n    size: 50,\n    collapsable: false,\n    showCount: true,\n    showMore: true,\n    bucketsTransform: identity\n  };\n  return FacetFilter;\n}(react_1.SearchkitComponent);\n\nexports.FacetFilter = FacetFilter;","map":{"version":3,"mappings":"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","names":["identity","require","__extends","props","_super","_this","toggleViewMoreOption","bind","FacetFilter","field","id","operator","title","include","exclude","size","translations","orderKey","orderDirection","fieldOptions","core_1","getAccessorOptions","blockName","mod","container","option","prevProps","accessor","options","searchkit","performSearch","key","state","toggle","keys","setValue","setViewMoreOption","getBuckets","length","getValue","bucketsTransform","listComponent","containerComponent","showCount","countFormatter","react_1","className","undefined","disabled","hasOptions","items","getItems","itemComponent","selectedItems","getSelectedItems","toggleItem","toggleFilter","setItems","setFilters","docCount","getDocCount","translate","renderShowMore","getMoreSizeOption","showMore","React","handler","bemBlocks","label","FacetFilterProps_1","ui_1","collapsable","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\search\\filters\\facet-filter\\FacetFilter.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { FacetAccessor, ISizeOption } from '../../../../core'\n\nimport { FastClick, renderComponent, SearchkitComponent } from '../../../../core/react'\n\nimport { CheckboxItemList, Panel } from '../../../ui'\nimport { FacetFilterProps, FacetFilterPropTypes } from './FacetFilterProps'\n\nconst identity = require('lodash/identity')\n\nexport class FacetFilter extends SearchkitComponent<FacetFilterProps, any> {\n  accessor: FacetAccessor\n\n  static propTypes = FacetFilterPropTypes\n\n  static defaultProps = {\n    listComponent: CheckboxItemList,\n    containerComponent: Panel,\n    size: 50,\n    collapsable: false,\n    showCount: true,\n    showMore: true,\n    bucketsTransform: identity\n  }\n\n  constructor(props) {\n    super(props)\n    this.toggleViewMoreOption = this.toggleViewMoreOption.bind(this)\n  }\n  getAccessorOptions() {\n    const {\n      field,\n      id,\n      operator,\n      title,\n      include,\n      exclude,\n      size,\n      translations,\n      orderKey,\n      orderDirection,\n      fieldOptions\n    } = this.props\n    return {\n      id,\n      operator,\n      title,\n      size,\n      include,\n      exclude,\n      field,\n      translations,\n      orderKey,\n      orderDirection,\n      fieldOptions\n    }\n  }\n  defineAccessor() {\n    return new FacetAccessor(this.props.id, this.getAccessorOptions())\n  }\n\n  defineBEMBlocks() {\n    const blockName = this.props.mod || 'sk-refinement-list'\n    return {\n      container: blockName,\n      option: `${blockName}-option`\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.operator != this.props.operator) {\n      this.accessor.options.operator = this.props.operator\n      this.searchkit.performSearch()\n    }\n  }\n\n  toggleFilter(key) {\n    this.accessor.state = this.accessor.state.toggle(key)\n    this.searchkit.performSearch()\n  }\n\n  setFilters(keys) {\n    this.accessor.state = this.accessor.state.setValue(keys)\n    this.searchkit.performSearch()\n  }\n\n  toggleViewMoreOption(option: ISizeOption) {\n    this.accessor.setViewMoreOption(option)\n    this.searchkit.performSearch()\n  }\n\n  hasOptions(): boolean {\n    return this.accessor.getBuckets().length != 0\n  }\n\n  getSelectedItems() {\n    return this.accessor.state.getValue()\n  }\n\n  getItems() {\n    return this.props.bucketsTransform(this.accessor.getBuckets())\n  }\n\n  render() {\n    if (!this.accessor) return null\n    const { listComponent, containerComponent, showCount, title, id, countFormatter } = this.props\n    return renderComponent(\n      containerComponent,\n      {\n        title,\n        className: id ? `filter--${id}` : undefined,\n        disabled: !this.hasOptions()\n      },\n      [\n        renderComponent(listComponent, {\n          key: 'listComponent',\n          items: this.getItems(),\n          itemComponent: this.props.itemComponent,\n          selectedItems: this.getSelectedItems(),\n          toggleItem: this.toggleFilter.bind(this),\n          setItems: this.setFilters.bind(this),\n          docCount: this.accessor.getDocCount(),\n          showCount,\n          translate: this.translate,\n          countFormatter\n        }),\n        this.renderShowMore()\n      ]\n    )\n  }\n\n  renderShowMore() {\n    const option = this.accessor.getMoreSizeOption()\n\n    if (!option || !this.props.showMore) {\n      return null\n    }\n\n    return (\n      <FastClick handler={() => this.toggleViewMoreOption(option)} key=\"showMore\">\n        <div data-qa=\"show-more\" className={this.bemBlocks.container('view-more-action')}>\n          {this.translate(option.label)}\n        </div>\n      </FastClick>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}