{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = require(\"prop-types\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar ui_1 = require(\"../../../ui\");\n\nvar defaults = require('lodash/defaults');\n\nvar CheckboxFilter =\n/** @class */\nfunction (_super) {\n  __extends(CheckboxFilter, _super);\n\n  function CheckboxFilter(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.toggleFilter = _this.toggleFilter.bind(_this);\n    return _this;\n  }\n\n  CheckboxFilter.prototype.defineAccessor = function () {\n    var _a = this.props,\n        id = _a.id,\n        title = _a.title,\n        translations = _a.translations,\n        label = _a.label,\n        filter = _a.filter;\n    return new core_1.CheckboxFilterAccessor(id, {\n      id: id,\n      title: title,\n      label: label,\n      translations: translations,\n      filter: filter\n    });\n  };\n\n  CheckboxFilter.prototype.toggleFilter = function () {\n    this.accessor.state = this.accessor.state.create(!this.accessor.state.getValue());\n    this.searchkit.performSearch();\n  };\n\n  CheckboxFilter.prototype.setFilters = function (keys) {\n    this.accessor.state = this.accessor.state.setValue(keys.length > 0);\n    this.searchkit.performSearch();\n  };\n\n  CheckboxFilter.prototype.getSelectedItems = function () {\n    if (this.accessor.state.getValue()) {\n      return [this.props.label];\n    }\n\n    return [];\n  };\n\n  CheckboxFilter.prototype.render = function () {\n    if (!this.accessor) return null;\n    var _a = this.props,\n        listComponent = _a.listComponent,\n        containerComponent = _a.containerComponent,\n        showCount = _a.showCount,\n        title = _a.title,\n        id = _a.id,\n        label = _a.label;\n    var disabled = this.searchkit.getHitsCount() == 0 && !this.accessor.state.getValue();\n    return core_1.renderComponent(containerComponent, {\n      title: title,\n      className: id ? \"filter--\" + id : undefined,\n      disabled: disabled\n    }, core_1.renderComponent(listComponent, {\n      items: [{\n        key: label,\n        doc_count: this.accessor.getDocCount()\n      }],\n      selectedItems: this.getSelectedItems(),\n      toggleItem: this.toggleFilter,\n      setItems: this.setFilters.bind(this),\n      showCount: showCount\n    }));\n  };\n\n  CheckboxFilter.propTypes = defaults({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    filter: PropTypes.object.isRequired,\n    translations: core_1.SearchkitComponent.translationsPropType(core_1.CheckboxFilterAccessor.translations),\n    showCount: PropTypes.bool\n  }, core_1.SearchkitComponent.propTypes);\n  CheckboxFilter.defaultProps = {\n    listComponent: ui_1.CheckboxItemList,\n    containerComponent: ui_1.Panel,\n    collapsable: false,\n    showCount: true\n  };\n  return CheckboxFilter;\n}(core_1.SearchkitComponent);\n\nexports.CheckboxFilter = CheckboxFilter;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAQA;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AAYA;AAAA;AAAA;EAAoCC;;EAsBlC,wBAAYC,KAAZ,EAAiB;IAAjB,YACEC,kBAAMD,KAAN,KAAY,IADd;;IAEEE,KAAI,CAACC,YAAL,GAAoBD,KAAI,CAACC,YAAL,CAAkBC,IAAlB,CAAuBF,KAAvB,CAApB;;EACD;;EAEDG;IACQ;IAAA,IAAEC,UAAF;IAAA,IAAMC,gBAAN;IAAA,IAAaC,8BAAb;IAAA,IAA2BC,gBAA3B;IAAA,IAAkCC,kBAAlC;IACN,OAAO,IAAIC,6BAAJ,CAA2BL,EAA3B,EAA+B;MACpCA,EAAE,IADkC;MAEpCC,KAAK,OAF+B;MAGpCE,KAAK,OAH+B;MAIpCD,YAAY,cAJwB;MAKpCE,MAAM;IAL8B,CAA/B,CAAP;EAOD,CATD;;EAWAL;IACE,KAAKO,QAAL,CAAcC,KAAd,GAAsB,KAAKD,QAAL,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAAC,KAAKF,QAAL,CAAcC,KAAd,CAAoBE,QAApB,EAA5B,CAAtB;IACA,KAAKC,SAAL,CAAeC,aAAf;EACD,CAHD;;EAKAZ,gDAAWa,IAAX,EAAe;IACb,KAAKN,QAAL,CAAcC,KAAd,GAAsB,KAAKD,QAAL,CAAcC,KAAd,CAAoBM,QAApB,CAA6BD,IAAI,CAACE,MAAL,GAAc,CAA3C,CAAtB;IACA,KAAKJ,SAAL,CAAeC,aAAf;EACD,CAHD;;EAKAZ;IACE,IAAI,KAAKO,QAAL,CAAcC,KAAd,CAAoBE,QAApB,EAAJ,EAAoC;MAClC,OAAO,CAAC,KAAKf,KAAL,CAAWS,KAAZ,CAAP;IACD;;IACD,OAAO,EAAP;EACD,CALD;;EAOAJ;IACE,IAAI,CAAC,KAAKO,QAAV,EAAoB,OAAO,IAAP;IACd;IAAA,IAAES,gCAAF;IAAA,IAAiBC,0CAAjB;IAAA,IAAqCC,wBAArC;IAAA,IAAgDhB,gBAAhD;IAAA,IAAuDD,UAAvD;IAAA,IAA2DG,gBAA3D;IAEN,IAAMe,QAAQ,GAAG,KAAKR,SAAL,CAAeS,YAAf,MAAiC,CAAjC,IAAsC,CAAC,KAAKb,QAAL,CAAcC,KAAd,CAAoBE,QAApB,EAAxD;IAEA,OAAOJ,uBACLW,kBADK,EAEL;MACEf,KAAK,OADP;MAEEmB,SAAS,EAAEpB,EAAE,GAAG,aAAWA,EAAd,GAAqBqB,SAFpC;MAGEH,QAAQ;IAHV,CAFK,EAOLb,uBAAgBU,aAAhB,EAA+B;MAC7BO,KAAK,EAAE,CAAC;QAAEC,GAAG,EAAEpB,KAAP;QAAcqB,SAAS,EAAE,KAAKlB,QAAL,CAAcmB,WAAd;MAAzB,CAAD,CADsB;MAE7BC,aAAa,EAAE,KAAKC,gBAAL,EAFc;MAG7BC,UAAU,EAAE,KAAK/B,YAHY;MAI7BgC,QAAQ,EAAE,KAAKC,UAAL,CAAgBhC,IAAhB,CAAqB,IAArB,CAJmB;MAK7BmB,SAAS;IALoB,CAA/B,CAPK,CAAP;EAeD,CArBD;;EApDOlB,2BAAYR,QAAQ,CACzB;IACES,EAAE,EAAE+B,SAAS,CAACC,MAAV,CAAiBC,UADvB;IAEEhC,KAAK,EAAE8B,SAAS,CAACC,MAAV,CAAiBC,UAF1B;IAGE9B,KAAK,EAAE4B,SAAS,CAACC,MAAV,CAAiBC,UAH1B;IAIE7B,MAAM,EAAE2B,SAAS,CAACG,MAAV,CAAiBD,UAJ3B;IAKE/B,YAAY,EAAEG,0BAAmB8B,oBAAnB,CAAwC9B,8BAAuBH,YAA/D,CALhB;IAMEe,SAAS,EAAEc,SAAS,CAACK;EANvB,CADyB,EASzB/B,0BAAmBgC,SATM,CAApB;EAYAtC,8BAAe;IACpBgB,aAAa,EAAEuB,qBADK;IAEpBtB,kBAAkB,EAAEsB,UAFA;IAGpBC,WAAW,EAAE,KAHO;IAIpBtB,SAAS,EAAE;EAJS,CAAf;EA8DT;AAAC,CA7ED,CAAoCZ,yBAApC;;AAAamC","names":["defaults","require","__extends","props","_super","_this","toggleFilter","bind","CheckboxFilter","id","title","translations","label","filter","core_1","accessor","state","create","getValue","searchkit","performSearch","keys","setValue","length","listComponent","containerComponent","showCount","disabled","getHitsCount","className","undefined","items","key","doc_count","getDocCount","selectedItems","getSelectedItems","toggleItem","setItems","setFilters","PropTypes","string","isRequired","object","translationsPropType","bool","propTypes","ui_1","collapsable","exports"],"sources":["C:\\Users\\mnavas\\CODE\\SmartBIC\\ache-multilingual\\ache-dashboard\\node_modules\\searchkit\\src\\components\\search\\filters\\checkbox-filter\\CheckboxFilter.tsx"],"sourcesContent":["import * as PropTypes from 'prop-types'\n\nimport {\n  SearchkitComponent,\n  SearchkitComponentProps,\n  CheckboxFilterAccessor,\n  RenderComponentType,\n  renderComponent\n} from '../../../../core'\n\nimport { Panel, CheckboxItemList } from '../../../ui'\n\nconst defaults = require('lodash/defaults')\n\nexport interface CheckboxFilterProps extends SearchkitComponentProps {\n  id: string\n  filter: any\n  title: string\n  label: string\n  containerComponent?: RenderComponentType<any>\n  listComponent?: RenderComponentType<any>\n  showCount?: boolean\n}\n\nexport class CheckboxFilter extends SearchkitComponent<CheckboxFilterProps, any> {\n  accessor: CheckboxFilterAccessor\n\n  static propTypes = defaults(\n    {\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      filter: PropTypes.object.isRequired,\n      translations: SearchkitComponent.translationsPropType(CheckboxFilterAccessor.translations),\n      showCount: PropTypes.bool\n    },\n    SearchkitComponent.propTypes\n  )\n\n  static defaultProps = {\n    listComponent: CheckboxItemList,\n    containerComponent: Panel,\n    collapsable: false,\n    showCount: true\n  }\n\n  constructor(props) {\n    super(props)\n    this.toggleFilter = this.toggleFilter.bind(this)\n  }\n\n  defineAccessor() {\n    const { id, title, translations, label, filter } = this.props\n    return new CheckboxFilterAccessor(id, {\n      id,\n      title,\n      label,\n      translations,\n      filter\n    })\n  }\n\n  toggleFilter() {\n    this.accessor.state = this.accessor.state.create(!this.accessor.state.getValue())\n    this.searchkit.performSearch()\n  }\n\n  setFilters(keys) {\n    this.accessor.state = this.accessor.state.setValue(keys.length > 0)\n    this.searchkit.performSearch()\n  }\n\n  getSelectedItems() {\n    if (this.accessor.state.getValue()) {\n      return [this.props.label]\n    }\n    return []\n  }\n\n  render(): React.ReactElement<any> {\n    if (!this.accessor) return null\n    const { listComponent, containerComponent, showCount, title, id, label } = this.props\n\n    const disabled = this.searchkit.getHitsCount() == 0 && !this.accessor.state.getValue()\n\n    return renderComponent(\n      containerComponent,\n      {\n        title,\n        className: id ? `filter--${id}` : undefined,\n        disabled\n      },\n      renderComponent(listComponent, {\n        items: [{ key: label, doc_count: this.accessor.getDocCount() }],\n        selectedItems: this.getSelectedItems(),\n        toggleItem: this.toggleFilter,\n        setItems: this.setFilters.bind(this),\n        showCount\n      })\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}